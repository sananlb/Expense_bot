"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –±–æ—Ç–∞
"""
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder
from bot.utils import get_text


def main_menu_keyboard(lang: str = 'ru') -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    keyboard = InlineKeyboardBuilder()
    
    keyboard.button(text=get_text('expenses_today', lang), callback_data="expenses_today")
    keyboard.button(text=get_text('cashback_menu', lang), callback_data="cashback_menu")
    keyboard.button(text=get_text('categories_menu', lang), callback_data="categories_menu")
    keyboard.button(text="üîÑ –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏", callback_data="recurring_menu")
    keyboard.button(text=get_text('settings_menu', lang), callback_data="settings")
    keyboard.button(text=get_text('info', lang), callback_data="start")
    
    keyboard.adjust(2, 2, 2)
    return keyboard.as_markup()


def back_close_keyboard(lang: str = 'ru') -> InlineKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∏ –ù–∞–∑–∞–¥ –∏ –ó–∞–∫—Ä—ã—Ç—å"""
    keyboard = InlineKeyboardBuilder()
    
    keyboard.button(text=get_text('back', lang), callback_data="back")
    keyboard.button(text=get_text('close', lang), callback_data="close")
    
    keyboard.adjust(2)
    return keyboard.as_markup()


def settings_keyboard(lang: str = 'ru') -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    keyboard = InlineKeyboardBuilder()
    
    keyboard.button(text=get_text('change_language', lang), callback_data="change_language")
    keyboard.button(text=get_text('change_timezone', lang), callback_data="change_timezone")
    keyboard.button(text=get_text('change_currency', lang), callback_data="change_currency")
    keyboard.button(text=get_text('configure_reports', lang), callback_data="configure_reports")
    
    # –ö–Ω–æ–ø–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    keyboard.button(text=get_text('close', lang), callback_data="close")
    
    keyboard.adjust(1, 1, 1, 1, 1)
    return keyboard.as_markup()


def get_language_keyboard(lang: str = 'ru') -> InlineKeyboardMarkup:
    """–í—ã–±–æ—Ä —è–∑—ã–∫–∞"""
    keyboard = InlineKeyboardBuilder()
    
    keyboard.button(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π", callback_data="lang_ru")
    keyboard.button(text="üá¨üáß English", callback_data="lang_en")
    
    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    keyboard.button(text=get_text('back', lang), callback_data="settings")
    keyboard.button(text=get_text('close', lang), callback_data="close")
    
    keyboard.adjust(2, 2)
    return keyboard.as_markup()


def get_timezone_keyboard(lang: str = 'ru') -> InlineKeyboardMarkup:
    """–í—ã–±–æ—Ä —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞ –ø–æ –∑–æ–Ω–∞–º UTC"""
    keyboard = InlineKeyboardBuilder()
    
    # –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —Å–º–µ—â–µ–Ω–∏—è (UTC-12 –¥–æ UTC-1)
    for offset in range(12, 0, -1):
        keyboard.button(
            text=f"UTC-{offset}", 
            callback_data=f"tz_-{offset}"
        )
    
    # UTC
    keyboard.button(text="UTC+0", callback_data="tz_0")
    
    # –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —Å–º–µ—â–µ–Ω–∏—è (UTC+1 –¥–æ UTC+14)
    for offset in range(1, 15):
        keyboard.button(
            text=f"UTC+{offset}", 
            callback_data=f"tz_+{offset}"
        )
    
    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    keyboard.button(text=get_text('back', lang), callback_data="settings")
    keyboard.button(text=get_text('close', lang), callback_data="close")
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ 3 –≤ —Ä—è–¥, –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    keyboard.adjust(*[3] * 9, 2)
    return keyboard.as_markup()


def get_currency_keyboard(lang: str = 'ru') -> InlineKeyboardMarkup:
    """–í—ã–±–æ—Ä –≤–∞–ª—é—Ç—ã"""
    keyboard = InlineKeyboardBuilder()
    
    currencies = [
        # –û—Å–Ω–æ–≤–Ω—ã–µ –≤–∞–ª—é—Ç—ã
        ("RUB ‚ÇΩ", "curr_rub"),
        ("USD $", "curr_usd"),
        ("EUR ‚Ç¨", "curr_eur"),
        # –õ–∞—Ç–∏–Ω—Å–∫–∞—è –ê–º–µ—Ä–∏–∫–∞
        ("ARS $", "curr_ars"),   # –ê—Ä–≥–µ–Ω—Ç–∏–Ω—Å–∫–æ–µ –ø–µ—Å–æ
        ("COP $", "curr_cop"),   # –ö–æ–ª—É–º–±–∏–π—Å–∫–æ–µ –ø–µ—Å–æ
        ("PEN S/", "curr_pen"),  # –ü–µ—Ä—É–∞–Ω—Å–∫–∏–π —Å–æ–ª—å
        ("CLP $", "curr_clp"),   # –ß–∏–ª–∏–π—Å–∫–æ–µ –ø–µ—Å–æ
        ("MXN $", "curr_mxn"),   # –ú–µ–∫—Å–∏–∫–∞–Ω—Å–∫–æ–µ –ø–µ—Å–æ
        ("BRL R$", "curr_brl"),  # –ë—Ä–∞–∑–∏–ª—å—Å–∫–∏–π —Ä–µ–∞–ª
        # –°–ù–ì
        ("KZT ‚Ç∏", "curr_kzt"),   # –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω
        ("UAH ‚Ç¥", "curr_uah"),   # –£–∫—Ä–∞–∏–Ω–∞
        ("BYN Br", "curr_byn"),  # –ë–µ–ª–∞—Ä—É—Å—å
        ("UZS", "curr_uzs"),     # –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω
        ("AMD ÷è", "curr_amd"),   # –ê—Ä–º–µ–Ω–∏—è
        ("AZN ‚Çº", "curr_azn"),   # –ê–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω
        ("KGS", "curr_kgs"),     # –ö–∏—Ä–≥–∏–∑–∏—è
        ("TJS", "curr_tjs"),     # –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω
        ("TMT", "curr_tmt"),     # –¢—É—Ä–∫–º–µ–Ω–∏—Å—Ç–∞–Ω
        ("MDL", "curr_mdl"),     # –ú–æ–ª–¥–æ–≤–∞
        ("GEL ‚Çæ", "curr_gel"),   # –ì—Ä—É–∑–∏—è
        # –î—Ä—É–≥–∏–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–∞–ª—é—Ç—ã
        ("INR ‚Çπ", "curr_inr"),   # –ò–Ω–¥–∏—è
        ("CNY ¬•", "curr_cny"),   # –ö–∏—Ç–∞–π—Å–∫–∏–π —é–∞–Ω—å
        ("TRY ‚Ç∫", "curr_try"),   # –¢—É—Ä–µ—Ü–∫–∞—è –ª–∏—Ä–∞
        ("GBP ¬£", "curr_gbp"),   # –ë—Ä–∏—Ç–∞–Ω—Å–∫–∏–π —Ñ—É–Ω—Ç
        ("CHF", "curr_chf"),     # –®–≤–µ–π—Ü–∞—Ä—Å–∫–∏–π —Ñ—Ä–∞–Ω–∫
    ]
    
    for text, callback_data in currencies:
        keyboard.button(text=text, callback_data=callback_data)
    
    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    keyboard.button(text=get_text('back', lang), callback_data="settings")
    keyboard.button(text=get_text('close', lang), callback_data="close")
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ 3 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥ (—Ç–µ–ø–µ—Ä—å —É –Ω–∞—Å 25 –≤–∞–ª—é—Ç + 2 –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏)
    keyboard.adjust(*[3] * 8, 1, 2)  # 8 —Ä—è–¥–æ–≤ –ø–æ 3 –≤–∞–ª—é—Ç—ã + 1 –≤–∞–ª—é—Ç–∞ + 2 –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    return keyboard.as_markup()


def expenses_summary_keyboard(lang: str = 'ru', period: str = 'today') -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å–≤–æ–¥–∫–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤"""
    keyboard = InlineKeyboardBuilder()
    
    if period == 'today':
        keyboard.button(text=get_text('show_month_start', lang), callback_data="show_month_start")
    else:
        keyboard.button(text=get_text('generate_pdf', lang), callback_data="generate_pdf")
    
    # –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
    keyboard.button(text=get_text('close', lang), callback_data="close")
    
    keyboard.adjust(1, 1)
    return keyboard.as_markup()


def categories_keyboard(lang: str = 'ru') -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –∫–∞—Ç–µ–≥–æ—Ä–∏–π"""
    keyboard = InlineKeyboardBuilder()
    
    keyboard.button(text=get_text('add_category', lang), callback_data="add_category")
    keyboard.button(text=get_text('delete_category', lang), callback_data="delete_category")
    
    # –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
    keyboard.button(text=get_text('close', lang), callback_data="close")
    
    keyboard.adjust(2, 1)
    return keyboard.as_markup()


def cashback_keyboard(lang: str = 'ru') -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –∫–µ—à–±—ç–∫–æ–≤"""
    keyboard = InlineKeyboardBuilder()
    
    keyboard.button(text=get_text('add_cashback', lang), callback_data="add_cashback")
    keyboard.button(text=get_text('remove_cashback', lang), callback_data="remove_cashback")
    keyboard.button(text=get_text('remove_all_cashback', lang), callback_data="remove_all_cashback")
    
    # –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
    keyboard.button(text=get_text('close', lang), callback_data="close")
    
    keyboard.adjust(2, 1, 1)
    return keyboard.as_markup()


def yes_no_keyboard(lang: str = 'ru') -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –î–∞/–ù–µ—Ç"""
    keyboard = InlineKeyboardBuilder()
    
    keyboard.button(text=get_text('yes', lang), callback_data="yes")
    keyboard.button(text=get_text('no', lang), callback_data="no")
    
    keyboard.adjust(2)
    return keyboard.as_markup()


def expense_actions_keyboard(expense_id: int, lang: str = 'ru') -> InlineKeyboardMarkup:
    """–î–µ–π—Å—Ç–≤–∏—è —Å —Ä–∞—Å—Ö–æ–¥–æ–º"""
    keyboard = InlineKeyboardBuilder()
    
    keyboard.button(text=get_text('change_category', lang), callback_data=f"change_category:{expense_id}")
    keyboard.button(text=get_text('delete', lang), callback_data=f"delete_expense:{expense_id}")
    
    keyboard.adjust(2)
    return keyboard.as_markup()


def month_selection_keyboard(lang: str = 'ru') -> InlineKeyboardMarkup:
    """–í—ã–±–æ—Ä –º–µ—Å—è—Ü–∞"""
    keyboard = InlineKeyboardBuilder()
    
    # –ú–µ—Å—è—Ü—ã
    months = [
        'january', 'february', 'march', 'april', 'may', 'june',
        'july', 'august', 'september', 'october', 'november', 'december'
    ]
    
    for i, month in enumerate(months, 1):
        keyboard.button(text=get_text(month, lang), callback_data=f"month_{i}")
    
    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    keyboard.button(text=get_text('back', lang), callback_data="cashback")
    keyboard.button(text=get_text('close', lang), callback_data="close")
    
    keyboard.adjust(3, 3, 3, 3, 2)
    return keyboard.as_markup()