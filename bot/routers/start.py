"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
"""
from aiogram import Router, F, types
from aiogram.filters import Command
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext
import asyncio

from bot.utils import get_text
from bot.services.profile import get_or_create_profile
from bot.keyboards import main_menu_keyboard, back_close_keyboard
from bot.services.category import create_default_categories
from bot.utils.message_utils import send_message_with_cleanup, delete_message_with_effect
from bot.utils.commands import update_user_commands

router = Router(name="start")


@router.message(Command("start"))
async def cmd_start(message: types.Message, state: FSMContext, lang: str = 'ru'):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start - –ø–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ"""
    user_id = message.from_user.id
    
    # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    profile = await get_or_create_profile(
        telegram_id=user_id,
        username=message.from_user.username,
        first_name=message.from_user.first_name,
        last_name=message.from_user.last_name,
        language_code=message.from_user.language_code
    )
    
    # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    created = await create_default_categories(user_id)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await update_user_commands(message.bot, user_id)
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ
    text = """üí∞ ExpenseBot - –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –≤ —É—á–µ—Ç–µ —Ä–∞—Å—Ö–æ–¥–æ–≤

–û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:

üí∏ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–æ–≤:
–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:
"–ö–æ—Ñ–µ 200" –∏–ª–∏ "–î–∏–∑–µ–ª—å 4095 –ê–ó–°"

üí≥ –ö–µ—à–±—ç–∫–∏ –ø–æ –±–∞–Ω–∫–æ–≤—Å–∫–∏–º –∫–∞—Ä—Ç–∞–º:
–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –≤—ã–≥–æ–¥–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ—Ç –±–∞–Ω–∫–æ–≤
–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –∫–µ—à–±—ç–∫–æ–º

üìä –û—Ç—á–µ—Ç—ã –æ —Ç—Ä–∞—Ç–∞—Ö:
–ü–æ–ø—Ä–æ—Å–∏—Ç–µ –æ—Ç—á–µ—Ç –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º —è–∑—ã–∫–æ–º:
"–ü–æ–∫–∞–∂–∏ —Ç—Ä–∞—Ç—ã –∑–∞ –∏—é–ª—å" –∏–ª–∏ "–°–∫–æ–ª—å–∫–æ —è –ø–æ—Ç—Ä–∞—Ç–∏–ª —Å–µ–≥–æ–¥–Ω—è"
–ü–æ–ª—É—á–∞–π—Ç–µ –∫—Ä–∞—Å–∏–≤—ã–µ PDF –æ—Ç—á–µ—Ç—ã —Å –≥—Ä–∞—Ñ–∏–∫–∞–º–∏"""
    
    # –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç—å
    inline_keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=get_text('close', lang), callback_data="close")]
    ])
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    await send_message_with_cleanup(message, state, text, reply_markup=inline_keyboard)




@router.callback_query(F.data == "menu")
async def callback_menu(callback: types.CallbackQuery, state: FSMContext, lang: str = 'ru'):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ callback"""
    text = f"{get_text('main_menu', lang)}\n\n{get_text('choose_action', lang)}"
    
    await send_message_with_cleanup(
        callback, state, text,
        reply_markup=main_menu_keyboard(lang)
    )
    await callback.answer()






@router.callback_query(F.data == "start")
async def callback_start(callback: types.CallbackQuery, state: FSMContext, lang: str = 'ru'):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ —á–µ—Ä–µ–∑ callback"""
    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await update_user_commands(callback.bot, callback.from_user.id)
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ
    text = """üí∞ ExpenseBot - –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –≤ —É—á–µ—Ç–µ —Ä–∞—Å—Ö–æ–¥–æ–≤

–û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:

üí∏ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–æ–≤:
–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:
"–ö–æ—Ñ–µ 200" –∏–ª–∏ "–î–∏–∑–µ–ª—å 4095 –ê–ó–°"

üí≥ –ö–µ—à–±—ç–∫–∏ –ø–æ –±–∞–Ω–∫–æ–≤—Å–∫–∏–º –∫–∞—Ä—Ç–∞–º:
–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –≤—ã–≥–æ–¥–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ—Ç –±–∞–Ω–∫–æ–≤
–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –∫–µ—à–±—ç–∫–æ–º

üìä –û—Ç—á–µ—Ç—ã –æ —Ç—Ä–∞—Ç–∞—Ö:
–ü–æ–ø—Ä–æ—Å–∏—Ç–µ –æ—Ç—á–µ—Ç –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º —è–∑—ã–∫–æ–º:
"–ü–æ–∫–∞–∂–∏ —Ç—Ä–∞—Ç—ã –∑–∞ –∏—é–ª—å" –∏–ª–∏ "–°–∫–æ–ª—å–∫–æ —è –ø–æ—Ç—Ä–∞—Ç–∏–ª —Å–µ–≥–æ–¥–Ω—è"
–ü–æ–ª—É—á–∞–π—Ç–µ –∫—Ä–∞—Å–∏–≤—ã–µ PDF –æ—Ç—á–µ—Ç—ã —Å –≥—Ä–∞—Ñ–∏–∫–∞–º–∏"""
    
    # –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç—å
    inline_keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=get_text('close', lang), callback_data="close")]
    ])
    
    try:
        await callback.message.edit_text(text, reply_markup=inline_keyboard)
    except Exception:
        # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
        await send_message_with_cleanup(callback, state, text, reply_markup=inline_keyboard)
    
    await callback.answer()


@router.callback_query(F.data == "close")
async def close_message(callback: types.CallbackQuery, state: FSMContext):
    """–ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    await callback.message.delete()
    # –û—á–∏—â–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –º–µ–Ω—é
    await state.update_data(last_menu_message_id=None)
    await callback.answer()