"""
–†–æ—É—Ç–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /blogger_stats - –ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –±–ª–æ–≥–µ—Ä–æ–≤
"""
from aiogram import Router, types
from aiogram.filters import Command, CommandObject
from aiogram.fsm.context import FSMContext
import logging
from typing import Optional

from bot.services.utm_tracking import get_blogger_stats_by_name
from bot.services.profile import get_or_create_profile
from bot.utils.message_utils import send_message_with_cleanup

logger = logging.getLogger(__name__)

router = Router(name="blogger_stats")


def format_blogger_stats(stats: dict, lang: str = 'ru') -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –±–ª–æ–≥–µ—Ä–∞ –≤ –∫—Ä–∞—Å–∏–≤—ã–π –æ—Ç—á–µ—Ç

    Args:
        stats: –°–ª–æ–≤–∞—Ä—å —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
        lang: –Ø–∑—ã–∫ –æ—Ç—á–µ—Ç–∞

    Returns:
        –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ —Å –æ—Ç—á–µ—Ç–æ–º
    """
    if not stats.get('found'):
        if lang == 'en':
            return (
                "üìä <b>Blogger Statistics</b>\n\n"
                f"‚ùå No data found for blogger <b>{stats.get('blogger_name', 'unknown')}</b>\n\n"
                "Please check:\n"
                "‚Ä¢ The blogger name is correct\n"
                "‚Ä¢ Users have registered through your link\n"
                "‚Ä¢ Format: /blogger_stats NAME (without b_ prefix)"
            )
        else:
            return (
                "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–ª–æ–≥–µ—Ä–∞</b>\n\n"
                f"‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ –±–ª–æ–≥–µ—Ä—É <b>{stats.get('blogger_name', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}</b>\n\n"
                "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:\n"
                "‚Ä¢ –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∏–º–µ–Ω–∏ –±–ª–æ–≥–µ—Ä–∞\n"
                "‚Ä¢ –ë—ã–ª–∏ –ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ\n"
                "‚Ä¢ –§–æ—Ä–º–∞—Ç: /blogger_stats –ò–ú–Ø (–±–µ–∑ –ø—Ä–µ—Ñ–∏–∫—Å–∞ b_)"
            )

    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    name = stats['blogger_name']
    total = stats['total_users']
    active = stats['active_users']
    paying = stats['paying_users']
    trial = stats['trial_users']
    conv_active = stats['conversion_to_active']
    conv_paying = stats['conversion_to_paying']
    campaigns = stats.get('campaigns', [])

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    if conv_paying >= 15:
        efficiency_emoji = "üî•"
        efficiency_text = "–û—Ç–ª–∏—á–Ω–æ!" if lang == 'ru' else "Excellent!"
    elif conv_paying >= 10:
        efficiency_emoji = "‚úÖ"
        efficiency_text = "–•–æ—Ä–æ—à–æ" if lang == 'ru' else "Good"
    elif conv_paying >= 5:
        efficiency_emoji = "üìà"
        efficiency_text = "–ù–æ—Ä–º–∞–ª—å–Ω–æ" if lang == 'ru' else "Normal"
    else:
        efficiency_emoji = "üìä"
        efficiency_text = "–ù—É–∂–Ω–æ —É–ª—É—á—à–∞—Ç—å" if lang == 'ru' else "Needs improvement"

    if lang == 'en':
        text = (
            f"üìä <b>Blogger Statistics: {name}</b>\n"
            f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n"

            f"üë• <b>Users</b>\n"
            f"‚îú Total registered: <b>{total}</b>\n"
            f"‚îú Active (7 days): <b>{active}</b>\n"
            f"‚îú Trial subscription: <b>{trial}</b>\n"
            f"‚îî Paid subscription: <b>{paying}</b>\n\n"

            f"üìà <b>Conversions</b>\n"
            f"‚îú To active: <b>{conv_active:.1f}%</b>\n"
            f"‚îî To paying: <b>{conv_paying:.1f}%</b>\n\n"

            f"{efficiency_emoji} <b>Efficiency: {efficiency_text}</b>\n"
        )

        # –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫–∏-–ø—Ä–∏–º–µ—Ä—ã
        if campaigns:
            text += "\nüîó <b>Your links:</b>\n"
            for camp in campaigns[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–∞–∫—Å–∏–º—É–º 3
                text += f"‚Ä¢ t.me/showmecoinbot?start=b_{camp}\n"
        else:
            text += f"\nüîó <b>Your link:</b>\n"
            text += f"t.me/showmecoinbot?start=b_{name}\n"

        text += (
            "\nüí° <b>Tips:</b>\n"
            "‚Ä¢ Use different links for different content\n"
            "‚Ä¢ Track which format works better\n"
            "‚Ä¢ Example: b_yourname_stories, b_yourname_reels"
        )

    else:  # Russian
        text = (
            f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–ª–æ–≥–µ—Ä–∞: {name}</b>\n"
            f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n"

            f"üë• <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</b>\n"
            f"‚îú –í—Å–µ–≥–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ: <b>{total}</b>\n"
            f"‚îú –ê–∫—Ç–∏–≤–Ω—ã—Ö (7 –¥–Ω–µ–π): <b>{active}</b>\n"
            f"‚îú –° –ø—Ä–æ–±–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–æ–π: <b>{trial}</b>\n"
            f"‚îî –° –ø–ª–∞—Ç–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–æ–π: <b>{paying}</b>\n\n"

            f"üìà <b>–ö–æ–Ω–≤–µ—Ä—Å–∏–∏</b>\n"
            f"‚îú –í –∞–∫—Ç–∏–≤–Ω—ã—Ö: <b>{conv_active:.1f}%</b>\n"
            f"‚îî –í –ø–ª–∞—Ç—è—â–∏—Ö: <b>{conv_paying:.1f}%</b>\n\n"

            f"{efficiency_emoji} <b>–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {efficiency_text}</b>\n"
        )

        # –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫–∏-–ø—Ä–∏–º–µ—Ä—ã
        if campaigns:
            text += "\nüîó <b>–í–∞—à–∏ —Å—Å—ã–ª–∫–∏:</b>\n"
            for camp in campaigns[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–∞–∫—Å–∏–º—É–º 3
                text += f"‚Ä¢ t.me/showmecoinbot?start=b_{camp}\n"
        else:
            text += f"\nüîó <b>–í–∞—à–∞ —Å—Å—ã–ª–∫–∞:</b>\n"
            text += f"t.me/showmecoinbot?start=b_{name}\n"

        text += (
            "\nüí° <b>–°–æ–≤–µ—Ç—ã:</b>\n"
            "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è —Ä–∞–∑–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞\n"
            "‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ, –∫–∞–∫–æ–π —Ñ–æ—Ä–º–∞—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –ª—É—á—à–µ\n"
            "‚Ä¢ –ü—Ä–∏–º–µ—Ä: b_–≤–∞—à–µ–∏–º—è_stories, b_–≤–∞—à–µ–∏–º—è_reels"
        )

    return text


@router.message(Command("blogger_stats"))
async def cmd_blogger_stats(
    message: types.Message,
    state: FSMContext,
    command: Optional[CommandObject] = None,
    lang: str = 'ru'
):
    """–ö–æ–º–∞–Ω–¥–∞ /blogger_stats - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è –±–ª–æ–≥–µ—Ä–∞"""

    user_id = message.from_user.id

    # –ü–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
    blogger_name = None
    if command and command.args:
        blogger_name = command.args.strip()
        # –£–¥–∞–ª—è–µ–º –ø—Ä–µ—Ñ–∏–∫—Å b_ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ–≥–æ –≤–≤–µ–ª (—Ä–µ–≥–∏—Å—Ç—Ä–æ–Ω–µ–∑–∞–≤–∏—Å–∏–º–æ)
        if blogger_name.lower().startswith('b_'):
            blogger_name = blogger_name[2:]

    if not blogger_name:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
        if lang == 'en':
            text = (
                "üìä <b>Blogger Statistics</b>\n\n"
                "To view your statistics, use:\n"
                "<code>/blogger_stats YOUR_NAME</code>\n\n"
                "Example:\n"
                "‚Ä¢ <code>/blogger_stats ivan</code>\n"
                "‚Ä¢ <code>/blogger_stats maria</code>\n\n"
                "Use the same name as in your link:\n"
                "If your link is <code>b_ivan</code>, use <code>ivan</code>"
            )
        else:
            text = (
                "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–ª–æ–≥–µ—Ä–∞</b>\n\n"
                "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–∞—à–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n"
                "<code>/blogger_stats –í–ê–®–ï_–ò–ú–Ø</code>\n\n"
                "–ü—Ä–∏–º–µ—Ä:\n"
                "‚Ä¢ <code>/blogger_stats ivan</code>\n"
                "‚Ä¢ <code>/blogger_stats maria</code>\n\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ –∂–µ –∏–º—è, —á—Ç–æ –∏ –≤ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ:\n"
                "–ï—Å–ª–∏ –≤–∞—à–∞ —Å—Å—ã–ª–∫–∞ <code>b_ivan</code>, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>ivan</code>"
            )
        await send_message_with_cleanup(message, state, text, parse_mode="HTML")
        return

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
    loading_text = "‚è≥ –ó–∞–≥—Ä—É–∂–∞—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É..." if lang == 'ru' else "‚è≥ Loading statistics..."
    loading_msg = await message.answer(loading_text)

    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = await get_blogger_stats_by_name(blogger_name)

        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
        report_text = format_blogger_stats(stats, lang)

        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
        try:
            await loading_msg.delete()
        except:
            pass

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç
        await send_message_with_cleanup(message, state, report_text, parse_mode="HTML")

        # –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å
        if stats.get('found'):
            logger.info(
                f"Blogger {blogger_name} requested stats: "
                f"users={stats['total_users']}, paying={stats['paying_users']}"
            )
        else:
            logger.info(f"Blogger {blogger_name} requested stats but no data found")

    except Exception as e:
        logger.error(f"Error getting blogger stats for {blogger_name}: {e}")

        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
        try:
            await loading_msg.delete()
        except:
            pass

        error_text = (
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            if lang == 'ru' else
            "‚ùå Error getting statistics. Please try again later."
        )
        await send_message_with_cleanup(message, state, error_text)