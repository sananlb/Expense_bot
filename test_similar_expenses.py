#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç: –ø–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö —Ç—Ä–∞—Ç –≤ –∏—Å—Ç–æ—Ä–∏–∏
"""

import os
import sys
import django
import asyncio
import io
from datetime import datetime, timedelta

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –¥–ª—è Windows
sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8')
sys.stderr = io.TextIOWrapper(sys.stderr.buffer, encoding='utf-8')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'expense_bot.settings')
django.setup()

from bot.services.expense import find_similar_expenses

async def test():
    user_id = 881292737
    
    test_cases = [
        "–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Ä–æ–≥–∞",
        "–∫–æ—Ñ–µ",
        "–ø—Ä–æ–¥—É–∫—Ç—ã", 
        "–±–µ–Ω–∑–∏–Ω",
        "—Ç–∞–∫—Å–∏"
    ]
    
    print("=" * 80)
    print("–¢–ï–°–¢ –ü–û–ò–°–ö–ê –ü–û–•–û–ñ–ò–• –¢–†–ê–¢")
    print("=" * 80)
    
    for description in test_cases:
        print(f"\nüìù –ò—â–µ–º –ø–æ—Ö–æ–∂–∏–µ —Ç—Ä–∞—Ç—ã –¥–ª—è: '{description}'")
        print("-" * 40)
        
        similar = await find_similar_expenses(user_id, description)
        
        if similar:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(similar)} –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:")
            for i, item in enumerate(similar, 1):
                print(f"   {i}. {item['amount']} {item['currency']} - {item['category']}")
                print(f"      –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ {item['count']} —Ä–∞–∑(–∞)")
                print(f"      –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑: {item['last_date']}")
        else:
            print("‚ùå –ü–æ—Ö–æ–∂–∏–µ —Ç—Ä–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

if __name__ == "__main__":
    asyncio.run(test())