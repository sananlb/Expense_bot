#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""

import os
import sys
import django
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ PYTHONPATH
sys.path.insert(0, str(Path(__file__).parent))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'expense_bot.settings')
django.setup()

from expenses.models import Profile, ExpenseCategory

# –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
DEFAULT_CATEGORIES_RU = [
    "üõí –°—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç—ã",
    "ü´ë –î—Ä—É–≥–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã",
    "üçΩÔ∏è –†–µ—Å—Ç–æ—Ä–∞–Ω—ã –∏ –∫–∞—Ñ–µ",
    "‚õΩ –ê–ó–°",
    "üöï –¢–∞–∫—Å–∏",
    "üöå –û–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç",
    "üöó –ê–≤—Ç–æ–º–æ–±–∏–ª—å",
    "üè† –ñ–∏–ª—å–µ",
    "üíä –ê–ø—Ç–µ–∫–∏",
    "üè• –ú–µ–¥–∏—Ü–∏–Ω–∞",
    "üèÉ –°–ø–æ—Ä—Ç",
    "üèÄ –°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã",
    "üëî –û–¥–µ–∂–¥–∞ –∏ –æ–±—É–≤—å",
    "üåπ –¶–≤–µ—Ç—ã",
    "üé≠ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è",
    "üìö –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ",
    "üéÅ –ü–æ–¥–∞—Ä–∫–∏",
    "‚úàÔ∏è –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è",
    "üì± –°–≤—è–∑—å –∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç",
    "üí∞ –ü—Ä–æ—á–∏–µ —Ä–∞—Å—Ö–æ–¥—ã",
]

def fix_user_categories(telegram_id):
    """–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        profile = Profile.objects.get(telegram_id=telegram_id)
        print(f"[OK] –ü—Ä–æ—Ñ–∏–ª—å –Ω–∞–π–¥–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {telegram_id}")
        print(f"   ID –ø—Ä–æ—Ñ–∏–ª—è: {profile.id}")
        
        existing_categories = profile.categories.all()
        print(f"\n–¢–µ–∫—É—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ({existing_categories.count()}):")
        existing_names = set()
        for cat in existing_categories:
            # –£–±–∏—Ä–∞–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ –∫–æ–Ω—Å–æ–ª—å Windows
            cat_name_clean = ''.join(c for c in cat.name if ord(c) < 128 or c.isalpha())
            print(f"   - {cat_name_clean} (–ø–æ–ª–Ω–æ–µ: —Å–º. –±–∞–∑—É)")
            existing_names.add(cat.name)
        
        # –°–æ–∑–¥–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        created_count = 0
        print("\n–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π:")
        for cat_name in DEFAULT_CATEGORIES_RU:
            if cat_name not in existing_names:
                category = ExpenseCategory.objects.create(
                    profile=profile,
                    name=cat_name
                )
                cat_name_clean = ''.join(c for c in cat_name if ord(c) < 128 or c.isalpha())
                print(f"   [+] –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {cat_name_clean}")
                created_count += 1
        
        if created_count > 0:
            print(f"\n[OK] –°–æ–∑–¥–∞–Ω–æ {created_count} –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
        else:
            print(f"\n[INFO] –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        final_categories = profile.categories.all().order_by('name')
        print(f"\n–í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ç–µ–ø–µ—Ä—å: {final_categories.count()}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–ü–æ–¥–∞—Ä–∫–∏"
        if final_categories.filter(name__icontains='–ø–æ–¥–∞—Ä–∫–∏').exists():
            print("[OK] –ö–∞—Ç–µ–≥–æ—Ä–∏—è '–ü–æ–¥–∞—Ä–∫–∏' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞")
        else:
            print("[WARNING] –ö–∞—Ç–µ–≥–æ—Ä–∏—è '–ü–æ–¥–∞—Ä–∫–∏' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            
    except Profile.DoesNotExist:
        print(f"[ERROR] –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {telegram_id}")
        return False
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞: {e}")
        return False
    
    return True

if __name__ == "__main__":
    # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Alexey Nalbantov
    user_id = 881292737
    
    print(f"–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}\n")
    print("=" * 50)
    
    fix_user_categories(user_id)