#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç: –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π record/chat
"""

import os
import sys
import django
import io

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –¥–ª—è Windows
sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8')
sys.stderr = io.TextIOWrapper(sys.stderr.buffer, encoding='utf-8')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'expense_bot.settings')
django.setup()

from bot.utils.text_classifier import classify_message, get_expense_indicators

test_cases = [
    # –Ø–≤–Ω—ã–µ —Ç—Ä–∞—Ç—ã
    "–æ–≥—É—Ä–µ—Ü",
    "–º–æ–ª–æ–∫–æ",
    "–∫—Ä–∞—Å–Ω–∞—è –∏–∫—Ä–∞",
    "–≤–∫—É—Å–Ω—ã–π —Ç–æ—Ä—Ç",
    "–∫–æ—Ñ–µ",
    "—Ç–∞–∫—Å–∏",
    "–±–µ–Ω–∑–∏–Ω 95",
    
    # –¢—Ä–∞—Ç—ã —Å –≥–ª–∞–≥–æ–ª–∞–º–∏
    "–∫—É–ø–∏–ª —Ö–ª–µ–±",
    "–∑–∞–ø–ª–∞—Ç–∏–ª –∑–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç",
    "–æ–ø–ª–∞—Ç–∏–ª –ø–∞—Ä–∫–æ–≤–∫—É",
    
    # –í–æ–ø—Ä–æ—Å—ã - –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å chat
    "—Å–∫–æ–ª—å–∫–æ —è –ø–æ—Ç—Ä–∞—Ç–∏–ª?",
    "—á—Ç–æ –∫—É–ø–∏—Ç—å?",
    "–æ–≥—É—Ä–µ—Ü?",
    "–∫–æ—Ñ–µ?",
    
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –∏ –æ–±—Ä–∞—â–µ–Ω–∏—è - chat
    "–ø—Ä–∏–≤–µ—Ç",
    "—Å–ø–∞—Å–∏–±–æ",
    "–ø–æ–º–æ–≥–∏ –º–Ω–µ",
    
    # –ö–æ–º–∞–Ω–¥—ã - chat
    "–ø–æ–∫–∞–∂–∏ –æ—Ç—á–µ—Ç",
    "–Ω–∞—Å—Ç—Ä–æ–π–∫–∏",
    "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –º–µ—Å—è—Ü",
    
    # –°–ª–æ–∂–Ω—ã–µ —Å–ª—É—á–∞–∏
    "–≤—á–µ—Ä–∞ –∫—É–ø–∏–ª –º–æ–ª–æ–∫–æ",
    "–Ω—É–∂–Ω–æ –∫—É–ø–∏—Ç—å —Ö–ª–µ–±",
    "—Ö–æ—á—É –∫–æ—Ñ–µ",
    "–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Ä–æ–≥–∞",
    
    # –î–ª–∏–Ω–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
    "—Å–µ–≥–æ–¥–Ω—è —è —Ö–æ–¥–∏–ª –≤ –º–∞–≥–∞–∑–∏–Ω –∏ –∫—É–ø–∏–ª –ø—Ä–æ–¥—É–∫—Ç—ã",
    "—Ä–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ –æ –º–æ–∏—Ö —Ç—Ä–∞—Ç–∞—Ö –∑–∞ –Ω–µ–¥–µ–ª—é",
]

print("=" * 80)
print("–¢–ï–°–¢ –ö–õ–ê–°–°–ò–§–ò–ö–ê–¢–û–†–ê –°–û–û–ë–©–ï–ù–ò–ô")
print("=" * 80)

for text in test_cases:
    msg_type, confidence = classify_message(text)
    indicators = get_expense_indicators(text) if msg_type == 'record' else []
    
    emoji = "üí∞" if msg_type == "record" else "üí¨"
    print(f"\n{emoji} '{text}'")
    print(f"   –¢–∏–ø: {msg_type} (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {confidence:.0%})")
    if indicators:
        print(f"   –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã: {', '.join(indicators)}")