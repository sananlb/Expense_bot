#!/usr/bin/env python
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–æ–≤
"""
import os
import sys
import asyncio
from datetime import date, timedelta
import sqlite3

# –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞ —É—Ä–æ–≤–Ω–µ SQL –∑–∞–ø—Ä–æ—Å–æ–≤
def test_database_queries():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º SQL –∑–∞–ø—Ä–æ—Å—ã –Ω–∞–ø—Ä—è–º—É—é –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print("=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï SQL –ó–ê–ü–†–û–°–û–í ===")
    
    conn = sqlite3.connect('expense_bot.db')
    cursor = conn.cursor()
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
    print("\n1. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã expenses_expense:")
    cursor.execute("PRAGMA table_info(expenses_expense);")
    columns = cursor.fetchall()
    date_columns = [col for col in columns if 'date' in col[1]]
    print(f"   –ü–æ–ª—è —Å 'date': {date_columns}")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –µ—Å—Ç—å
    telegram_id = 881292737
    print(f"\n2. –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {telegram_id}:")
    
    # –ù–∞—Ö–æ–¥–∏–º profile_id
    cursor.execute("SELECT id FROM users_profile WHERE telegram_id = ?", (telegram_id,))
    profile_result = cursor.fetchone()
    if not profile_result:
        print("   ‚ùå –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        conn.close()
        return
    
    profile_id = profile_result[0]
    print(f"   Profile ID: {profile_id}")
    
    # –¢–µ—Å—Ç 3: –†–∞—Å—Ö–æ–¥—ã –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü
    current_month = date.today().strftime('%Y-%m')
    print(f"\n3. –†–∞—Å—Ö–æ–¥—ã –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü {current_month}:")
    
    cursor.execute("""
        SELECT COUNT(*), SUM(amount) 
        FROM expenses_expense 
        WHERE profile_id = ? AND expense_date LIKE ?
    """, (profile_id, current_month + '%'))
    
    month_result = cursor.fetchone()
    expenses_count, total_amount = month_result
    print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞—Å—Ö–æ–¥–æ–≤: {expenses_count}")
    print(f"   –û–±—â–∞—è —Å—É–º–º–∞: {total_amount}")
    
    if expenses_count > 0:
        print("   ‚úÖ –î–∞–Ω–Ω—ã–µ –Ω–∞–π–¥–µ–Ω—ã!")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞—Å—Ö–æ–¥–æ–≤
        cursor.execute("""
            SELECT expense_date, amount, description 
            FROM expenses_expense 
            WHERE profile_id = ? AND expense_date LIKE ?
            ORDER BY expense_date DESC 
            LIMIT 5
        """, (profile_id, current_month + '%'))
        
        expenses = cursor.fetchall()
        print("   –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥—ã:")
        for exp in expenses:
            print(f"     {exp[0]}: {exp[1]} - {exp[2]}")
    else:
        print("   ‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü!")
    
    # –¢–µ—Å—Ç 4: –†–∞—Å—Ö–æ–¥—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    print(f"\n4. –†–∞—Å—Ö–æ–¥—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü:")
    cursor.execute("""
        SELECT c.name, COUNT(*), SUM(e.amount)
        FROM expenses_expense e
        LEFT JOIN expenses_category c ON e.category_id = c.id
        WHERE e.profile_id = ? AND e.expense_date LIKE ?
        GROUP BY c.name
        ORDER BY SUM(e.amount) DESC
    """, (profile_id, current_month + '%'))
    
    categories = cursor.fetchall()
    if categories:
        print("   –ö–∞—Ç–µ–≥–æ—Ä–∏–∏:")
        for cat in categories:
            cat_name = cat[0] or "–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"
            print(f"     {cat_name}: {cat[1]} —Ä–∞—Å—Ö–æ–¥–æ–≤, {cat[2]} —Å—É–º–º–∞")
    else:
        print("   ‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º!")
    
    conn.close()
    
    # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—é–º–µ
    print(f"\n=== –†–ï–ó–Æ–ú–ï ===")
    if expenses_count > 0:
        print("‚úÖ –î–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ –µ—Å—Ç—å - –ø—Ä–æ–±–ª–µ–º–∞ –±—ã–ª–∞ –≤ –∫–æ–¥–µ!")
        print("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É —Å –æ—Ç—á–µ—Ç–∞–º–∏")
        print("\nüìã –ß—Ç–æ –±—ã–ª–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ:")
        print("   ‚Ä¢ bot/services/expense.py: order_by('-date') ‚Üí order_by('-expense_date')")
        print("   ‚Ä¢ bot/routers/reports.py: expense.date ‚Üí expense.expense_date")
        print("   ‚Ä¢ database/models.py: expenses.first().date ‚Üí expenses.first().expense_date")
        print("   ‚Ä¢ expenses/models_old.py: –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
        
        print(f"\nüìä –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {telegram_id} –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å:")
        print(f"   ‚Ä¢ {expenses_count} —Ä–∞—Å—Ö–æ–¥–æ–≤ –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü")
        print(f"   ‚Ä¢ –û–±—â–∞—è —Å—É–º–º–∞: {total_amount}")
        print(f"   ‚Ä¢ {len(categories)} –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å –¥–∞–Ω–Ω—ã–º–∏")
    else:
        print("‚ùå –ü—Ä–æ–±–ª–µ–º–∞ –Ω–µ —Ç–æ–ª—å–∫–æ –≤ –∫–æ–¥–µ - –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü")


if __name__ == "__main__":
    test_database_queries()