#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤–∞–ª—é—Ç—ã
"""
import re

# –ù–æ–≤—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã —Å –≥—Ä–∞–Ω–∏—Ü–∞–º–∏ —Å–ª–æ–≤
CURRENCY_PATTERNS = {
    # Major world currencies
    'USD': [r'\$', r'\busd\b', r'–¥–æ–ª–ª', r'–¥–æ–ª–ª–∞—Ä'],
    'EUR': [r'‚Ç¨', r'\beur\b', r'–µ–≤—Ä–æ', r'euro'],
    'GBP': [r'¬£', r'\bgbp\b', r'—Ñ—É–Ω—Ç', r'sterling', r'pounds?\b'],
    'CNY': [r'¬•', r'\bcny\b', r'—é–∞–Ω', r'yuan', r'renminbi', r'\brmb\b'],
    'CHF': [r'\bchf\b', r'‚Ç£', r'—Ñ—Ä–∞–Ω–∫(?:–æ–≤|–∞)?\b', r'swiss\s+franc', r'francs?\b'],
    'INR': [r'\binr\b', r'‚Çπ', r'—Ä—É–ø–∏[–π—è–µ—é]', r'–∏–Ω–¥–∏–π—Å–∫.*—Ä—É–ø'],
    'TRY': [r'\btry\b', r'‚Ç∫', r'–ª–∏—Ä[–∞–∏—ã]?\b', r'—Ç—É—Ä–µ—Ü.*–ª–∏—Ä'],

    # Local currencies (CIS and nearby)
    'KZT': [r'\bkzt\b', r'‚Ç∏', r'—Ç–µ–Ω–≥–µ', r'—Ç–µ–Ω—å–≥–µ', r'—Ç–µ–Ω–≥[–µ–∏–∏—è]', r'—Ç–Ω–≥', r'tenge'],
    'UAH': [r'\buah\b', r'–≥—Ä–Ω', r'–≥—Ä–∏–≤–Ω[–∞-—è]*', r'–≥—Ä–∏–≤–µ–Ω', r'hryvni?a', r'hryvnya'],
    'BYN': [r'\bbyn\b', r'\bbyr\b', r'–±–µ–ª[–∞–æ]—Ä—É—Å.*—Ä—É–±', r'belarus.*rubl', r'belarusian\s+ruble'],
    'RUB': [r'‚ÇΩ', r'\brub\b', r'—Ä—É–±', r'—Ä—É–±–ª'],
    'UZS': [r'\buzs\b', r"so['']m", r'—Å—É–º(?:–æ–≤|—ã|—É)?\b', r'—É–∑–±–µ–∫.*—Å—É–º', r'uzbek.*som'],
    'AMD': [r'\bamd\b', r'–¥—Ä–∞–º', r'dram'],
    'TMT': [r'\btmt\b', r'—Ç—É—Ä–∫–º–µ–Ω.*–º–∞–Ω–∞—Ç', r'turkmen.*manat'],
    'AZN': [r'\bazn\b', r'–∞–∑–µ—Ä.*–º–∞–Ω–∞—Ç', r'azer.*manat', r'–º–∞–Ω–∞—Ç(?:–æ–≤|—ã)?\b'],
    'KGS': [r'\bkgs\b', r'\bkgz\b', r'—Å–æ–º(?:–æ–≤|—ã|—É)?\b', r'–∫–∏—Ä–≥–∏–∑.*—Å–æ–º', r'–∫—ã—Ä–≥.*—Å–æ–º'],
    'TJS': [r'\btjs\b', r'—Å–æ–º–æ–Ω[–∏—è]?\b', r'—Ç–∞–¥–∂–∏–∫.*—Å–æ–º', r'tajik.*somoni'],
    'MDL': [r'\bmdl\b', r'–ª–µ–π(?:–µ–≤|—è|–∏|–µ–º|—è–º–∏)?\b', r'–º–æ–ª–¥–∞–≤.*–ª–µ–π', r'moldov.*le[ui]'],
    'GEL': [r'\bgel\b', r'–ª–∞—Ä–∏\b', r'lari\b', r'gruzi.*lari'],

    # Latin American currencies
    'ARS': [r'\bars\b', r'–∞—Ä–≥–µ–Ω—Ç–∏–Ω—Å–∫–∏—Ö?', r'–∞—Ä–≥–µ–Ω—Ç–∏–Ω—Å–∫–æ–µ', r'–∞—Ä–≥–µ–Ω—Ç–∏–Ω—Å–∫–∏–π', r'argentin[ea].*peso', r'–ø–µ—Å–æ'],
    'COP': [r'\bcop\b', r'–∫–æ–ª—É–º–±–∏–π—Å–∫–∏—Ö?', r'–∫–æ–ª—É–º–±–∏–π—Å–∫–æ–µ', r'–∫–æ–ª—É–º–±–∏–π—Å–∫–∏–π', r'colombian.*peso'],
    'PEN': [r'\bpen\b', r'—Å–æ–ª–µ–π?', r'–ø–µ—Ä—É–∞–Ω—Å–∫–∏—Ö?', r'–ø–µ—Ä—É–∞–Ω—Å–∫–æ–µ', r'–ø–µ—Ä—É–∞–Ω—Å–∫–∏–π', r'peruvian\s+sol'],
    'CLP': [r'\bclp\b', r'—á–∏–ª–∏–π—Å–∫–∏—Ö?', r'—á–∏–ª–∏–π—Å–∫–æ–µ', r'—á–∏–ª–∏–π—Å–∫–∏–π', r'chilean.*peso'],
    'MXN': [r'\bmxn\b', r'–º–µ–∫—Å–∏–∫–∞–Ω—Å–∫–∏—Ö?', r'–º–µ–∫—Å–∏–∫–∞–Ω—Å–∫–æ–µ', r'–º–µ–∫—Å–∏–∫–∞–Ω—Å–∫–∏–π', r'mexican.*peso'],
    'BRL': [r'\bbrl\b', r'—Ä–µ–∞–ª(?:–æ–≤|—ã)?', r'–±—Ä–∞–∑–∏–ª—å—Å–∫–∏—Ö?', r'–±—Ä–∞–∑–∏–ª—å—Å–∫–æ–µ', r'–±—Ä–∞–∑–∏–ª—å—Å–∫–∏–π', r'brazilian\s+real'],
}


def detect_currency(text: str, user_currency: str = 'RUB') -> str:
    """Detect currency from text"""
    text_lower = text.lower()

    for currency, patterns in CURRENCY_PATTERNS.items():
        for pattern in patterns:
            if re.search(pattern, text_lower):
                return currency

    return (user_currency or 'RUB').upper()


# –¢–µ—Å—Ç–æ–≤—ã–µ —Å–ª—É—á–∞–∏
test_cases = [
    # –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–ª—É—á–∞–∏ (–¥–æ–ª–∂–Ω—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å RUB –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è)
    ("OpenAI 1500", "RUB", "‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: OpenAI –±–æ–ª—å—à–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç 'pen'"),
    ("Mars 500", "RUB", "‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: Mars –±–æ–ª—å—à–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç 'ars'"),
    ("Cars 1000", "RUB", "‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: Cars –±–æ–ª—å—à–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç 'ars'"),
    ("Stars 300", "RUB", "‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: Stars –±–æ–ª—å—à–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç 'ars'"),
    ("Country 200", "RUB", "‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: Country –±–æ–ª—å—à–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç 'try'"),
    ("Industry 500", "RUB", "‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: Industry –±–æ–ª—å—à–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç 'try'"),
    ("Umbrella 300", "RUB", "‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: Umbrella –±–æ–ª—å—à–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç 'brl'"),
    ("Pencil 200", "RUB", "‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: Pencil –±–æ–ª—å—à–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç 'pen'"),

    # –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Å–ª—É—á–∞–∏ —Å —è–≤–Ω–æ–π –≤–∞–ª—é—Ç–æ–π (–¥–æ–ª–∂–Ω—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–∞–ª—é—Ç—É –∏–∑ —Ç–µ–∫—Å—Ç–∞)
    ("–ö–æ—Ñ–µ $5", "USD", "‚úÖ –°–∏–º–≤–æ–ª $ —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç—Å—è"),
    ("–û–±–µ–¥ ‚Ç¨20", "EUR", "‚úÖ –°–∏–º–≤–æ–ª ‚Ç¨ —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç—Å—è"),
    ("–¢–∞–∫—Å–∏ ‚ÇΩ300", "RUB", "‚úÖ –°–∏–º–≤–æ–ª ‚ÇΩ —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç—Å—è"),
    ("100 usd", "USD", "‚úÖ –ö–æ–¥ USD –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω–æ–µ —Å–ª–æ–≤–æ"),
    ("pen 200", "PEN", "‚úÖ –ö–æ–¥ PEN –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω–æ–µ —Å–ª–æ–≤–æ"),
    ("ars 500", "ARS", "‚úÖ –ö–æ–¥ ARS –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω–æ–µ —Å–ª–æ–≤–æ"),
    ("try 100", "TRY", "‚úÖ –ö–æ–¥ TRY –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω–æ–µ —Å–ª–æ–≤–æ"),
    ("100 —Ä—É–±", "RUB", "‚úÖ –°–ª–æ–≤–æ '—Ä—É–±' —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç—Å—è"),
    ("50 –¥–æ–ª–ª–∞—Ä–æ–≤", "USD", "‚úÖ –°–ª–æ–≤–æ '–¥–æ–ª–ª–∞—Ä–æ–≤' —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç—Å—è"),
    ("30 –µ–≤—Ä–æ", "EUR", "‚úÖ –°–ª–æ–≤–æ '–µ–≤—Ä–æ' —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç—Å—è"),

    # –°–ª—É—á–∞–∏ –±–µ–∑ —è–≤–Ω–æ–π –≤–∞–ª—é—Ç—ã (–¥–æ–ª–∂–Ω—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–∞–ª—é—Ç—É –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è)
    ("–ö–æ—Ñ–µ 200", "RUB", "‚úÖ –ù–µ—Ç –≤–∞–ª—é—Ç—ã ‚Üí –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è"),
    ("Coffee 150", "RUB", "‚úÖ –ù–µ—Ç –≤–∞–ª—é—Ç—ã ‚Üí –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è"),
    ("–û–±–µ–¥ 500", "RUB", "‚úÖ –ù–µ—Ç –≤–∞–ª—é—Ç—ã ‚Üí –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è"),
]

print("=" * 80)
print("–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –û–ü–†–ï–î–ï–õ–ï–ù–ò–Ø –í–ê–õ–Æ–¢–´")
print("=" * 80)
print()

passed = 0
failed = 0

for text, expected_currency, description in test_cases:
    result = detect_currency(text, user_currency='RUB')
    status = "‚úÖ PASS" if result == expected_currency else "‚ùå FAIL"

    if result == expected_currency:
        passed += 1
    else:
        failed += 1

    print(f"{status} | '{text}' ‚Üí {result} (–æ–∂–∏–¥–∞–ª–æ—Å—å: {expected_currency})")
    print(f"       {description}")
    print()

print("=" * 80)
print(f"–†–ï–ó–£–õ–¨–¢–ê–¢–´: {passed} passed, {failed} failed –∏–∑ {len(test_cases)} —Ç–µ—Å—Ç–æ–≤")
print("=" * 80)

if failed == 0:
    print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û! –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
else:
    print(f"\n‚ö†Ô∏è  {failed} —Ç–µ—Å—Ç(–æ–≤) –ø—Ä–æ–≤–∞–ª–∏–ª–æ—Å—å. –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞.")
