#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
"""

import os
import sys
import django

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'expense_bot.settings')
django.setup()

from expenses.models import Profile, AffiliateLink, AffiliateReferral, AffiliateCommission, AffiliateProgram
from django.utils import timezone
from decimal import Decimal


def check_affiliate_system(user1_id: int, user2_id: int):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –¥–ª—è –¥–≤—É—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    
    Args:
        user1_id: ID –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ä–µ—Ñ–µ—Ä–µ—Ä)
        user2_id: ID –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ä–µ—Ñ–µ—Ä–∞–ª)
    """
    print(f"\n{'='*60}")
    print("–ü–†–û–í–ï–†–ö–ê –†–ï–§–ï–†–ê–õ–¨–ù–û–ô –°–ò–°–¢–ï–ú–´")
    print(f"{'='*60}\n")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ñ–∏–ª–∏
    try:
        user1 = Profile.objects.get(telegram_id=user1_id)
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1 –Ω–∞–π–¥–µ–Ω: ID={user1_id}, Username={user1.username}")
    except Profile.DoesNotExist:
        print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1 —Å ID {user1_id} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    try:
        user2 = Profile.objects.get(telegram_id=user2_id)
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2 –Ω–∞–π–¥–µ–Ω: ID={user2_id}, Username={user2.username}")
    except Profile.DoesNotExist:
        print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2 —Å ID {user2_id} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    print(f"\n{'-'*60}")
    print("–ü–†–û–í–ï–†–ö–ê –†–ï–§–ï–†–ê–õ–¨–ù–´–• –ü–†–û–ì–†–ê–ú–ú")
    print(f"{'-'*60}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É
    active_programs = AffiliateProgram.objects.filter(is_active=True)
    if active_programs.exists():
        for program in active_programs:
            print(f"‚úÖ –ê–∫—Ç–∏–≤–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞: –∫–æ–º–∏—Å—Å–∏—è {program.commission_permille/10}%, ID={program.id}")
    else:
        print("‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º!")
    
    print(f"\n{'-'*60}")
    print("–ü–†–û–í–ï–†–ö–ê –†–ï–§–ï–†–ê–õ–¨–ù–´–• –°–°–´–õ–û–ö")
    print(f"{'-'*60}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 1
    try:
        link1 = AffiliateLink.objects.get(profile=user1)
        print(f"‚úÖ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 1:")
        print(f"   –ö–æ–¥: {link1.affiliate_code}")
        print(f"   –°—Å—ã–ª–∫–∞: {link1.telegram_link}")
        print(f"   –ö–ª–∏–∫–∏: {link1.clicks}")
        print(f"   –ö–æ–Ω–≤–µ—Ä—Å–∏–∏: {link1.conversions}")
        print(f"   –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: {link1.total_earned} ‚≠ê")
        print(f"   –ê–∫—Ç–∏–≤–Ω–∞: {'–î–∞' if link1.is_active else '–ù–µ—Ç'}")
    except AffiliateLink.DoesNotExist:
        print("‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 1 –Ω–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏!")
        link1 = None
    
    print(f"\n{'-'*60}")
    print("–ü–†–û–í–ï–†–ö–ê –†–ï–§–ï–†–ê–õ–¨–ù–´–• –°–í–Ø–ó–ï–ô")
    print(f"{'-'*60}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑—å –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ (–Ω–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞)
    try:
        referral = AffiliateReferral.objects.get(
            referrer=user1,
            referred=user2
        )
        print(f"‚úÖ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–≤—è–∑—å –Ω–∞–π–¥–µ–Ω–∞:")
        print(f"   –†–µ—Ñ–µ—Ä–µ—Ä: {referral.referrer.telegram_id} ({referral.referrer.username})")
        print(f"   –†–µ—Ñ–µ—Ä–∞–ª: {referral.referred.telegram_id} ({referral.referred.username})")
        print(f"   –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {referral.created_at}")
        print(f"   –ü–µ—Ä–≤—ã–π –ø–ª–∞—Ç–µ–∂: {referral.first_payment_at or '–ù–µ—Ç'}")
        print(f"   –í—Å–µ–≥–æ –ø–ª–∞—Ç–µ–∂–µ–π: {referral.total_payments}")
        print(f"   –í—Å–µ–≥–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ: {referral.total_spent} ‚≠ê")
        if referral.affiliate_link:
            print(f"   –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞: {referral.affiliate_link.affiliate_code}")
    except AffiliateReferral.DoesNotExist:
        print(f"‚ùå –ù–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–≤—è–∑–∏ –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ (–Ω–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞)!")
        referral = None
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ä—É—é —Å–∏—Å—Ç–µ–º—É
    if user2.referrer:
        print(f"\n‚úÖ –°–≤—è–∑—å —á–µ—Ä–µ–∑ —Å—Ç–∞—Ä—É—é —Å–∏—Å—Ç–µ–º—É:")
        print(f"   –†–µ—Ñ–µ—Ä–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 2: {user2.referrer.telegram_id} ({user2.referrer.username})")
    else:
        print(f"\n‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 2 –Ω–µ—Ç —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ –≤ —Å—Ç–∞—Ä–æ–π —Å–∏—Å—Ç–µ–º–µ")
    
    print(f"\n{'-'*60}")
    print("–ü–†–û–í–ï–†–ö–ê –ö–û–ú–ò–°–°–ò–ô")
    print(f"{'-'*60}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∏—Å—Å–∏–∏
    commissions = AffiliateCommission.objects.filter(
        referrer=user1,
        referred=user2
    ).order_by('-created_at')
    
    if commissions.exists():
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∫–æ–º–∏—Å—Å–∏–π: {commissions.count()}")
        for i, commission in enumerate(commissions[:5], 1):
            print(f"\n   –ö–æ–º–∏—Å—Å–∏—è #{i}:")
            print(f"   - –°—É–º–º–∞ –ø–ª–∞—Ç–µ–∂–∞: {commission.payment_amount} ‚≠ê")
            print(f"   - –°—É–º–º–∞ –∫–æ–º–∏—Å—Å–∏–∏: {commission.commission_amount} ‚≠ê")
            print(f"   - –°—Ç–∞–≤–∫–∞: {commission.commission_rate/10}%")
            print(f"   - –°—Ç–∞—Ç—É—Å: {commission.status}")
            if commission.hold_until:
                print(f"   - –•–æ–ª–¥ –¥–æ: {commission.hold_until}")
            print(f"   - –î–∞—Ç–∞: {commission.created_at}")
    else:
        print("‚ùå –ù–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –∫–æ–º–∏—Å—Å–∏–π –º–µ–∂–¥—É —ç—Ç–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏!")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∫–æ–º–∏—Å—Å–∏–∏ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
    all_commissions = AffiliateCommission.objects.filter(referrer=user1)
    if all_commissions.exists():
        total_earned = sum(c.commission_amount for c in all_commissions)
        print(f"\nüìä –í—Å–µ–≥–æ –∫–æ–º–∏—Å—Å–∏–π —É —Ä–µ—Ñ–µ—Ä–µ—Ä–∞: {all_commissions.count()}")
        print(f"   –û–±—â–∞—è —Å—É–º–º–∞: {total_earned} ‚≠ê")
        
        # –ü–æ —Å—Ç–∞—Ç—É—Å–∞–º
        for status in ['pending', 'hold', 'paid', 'cancelled', 'refunded']:
            count = all_commissions.filter(status=status).count()
            if count > 0:
                amount = sum(c.commission_amount for c in all_commissions.filter(status=status))
                print(f"   - {status}: {count} —à—Ç. –Ω–∞ —Å—É–º–º—É {amount} ‚≠ê")
    
    print(f"\n{'-'*60}")
    print("–ü–†–û–í–ï–†–ö–ê –ü–û–î–ü–ò–°–û–ö")
    print(f"{'-'*60}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 2
    subscriptions = user2.subscriptions.all().order_by('-created_at')
    if subscriptions.exists():
        print(f"‚úÖ –ü–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 2: {subscriptions.count()} —à—Ç.")
        for sub in subscriptions[:3]:
            print(f"   - {sub.type}, {sub.amount} ‚≠ê, –º–µ—Ç–æ–¥: {sub.payment_method}, –∞–∫—Ç–∏–≤–Ω–∞: {'–î–∞' if sub.is_active else '–ù–µ—Ç'}")
    else:
        print("‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 2 –Ω–µ—Ç –ø–æ–¥–ø–∏—Å–æ–∫")
    
    print(f"\n{'='*60}")
    print("–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú")
    print(f"{'='*60}\n")
    
    problems = []
    
    if not active_programs.exists():
        problems.append("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã - —Å–æ–∑–¥–∞–π—Ç–µ —á–µ—Ä–µ–∑ /affiliate –∏–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –æ–ø–ª–∞—Ç–µ")
    
    if not link1:
        problems.append("–£ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ –Ω–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏ - —Å–æ–∑–¥–∞–π—Ç–µ —á–µ—Ä–µ–∑ /affiliate")
    
    if not referral:
        problems.append("–ù–µ—Ç —Å–≤—è–∑–∏ –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2 –¥–æ–ª–∂–µ–Ω –ø–µ—Ä–µ–π—Ç–∏ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
    
    if referral and referral.total_payments == 0:
        problems.append("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2 –µ—â–µ –Ω–µ –¥–µ–ª–∞–ª –ø–ª–∞—Ç–µ–∂–µ–π –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ")
    
    if problems:
        print("‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:")
        for i, problem in enumerate(problems, 1):
            print(f"   {i}. {problem}")
    else:
        print("‚úÖ –ü—Ä–æ–±–ª–µ–º –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ! –°–∏—Å—Ç–µ–º–∞ –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
    
    print(f"\n{'='*60}\n")


if __name__ == "__main__":
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    try:
        user1_id = int(input("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 1 (—Ä–µ—Ñ–µ—Ä–µ—Ä): "))
        user2_id = int(input("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 2 (—Ä–µ—Ñ–µ—Ä–∞–ª): "))
        
        check_affiliate_system(user1_id, user2_id)
    except ValueError:
        print("–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —á–∏—Å–ª–æ–≤—ã–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    except KeyboardInterrupt:
        print("\n\n–û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()