#!/bin/bash
# –°–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Expense Bot –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Å–µ—Ä–≤–µ—Ä–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
SERVICE_NAME="expense-bot"
PROJECT_DIR="/home/deploy/expense_bot"
VENV_PATH="$PROJECT_DIR/venv"

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç—É—Å–∞
show_status() {
    echo -e "${YELLOW}=== –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤ ===${NC}"
    echo ""
    
    # PostgreSQL
    if systemctl is-active --quiet postgresql; then
        echo -e "PostgreSQL:    ${GREEN}[RUNNING]${NC}"
    else
        echo -e "PostgreSQL:    ${RED}[STOPPED]${NC}"
    fi
    
    # Redis
    if systemctl is-active --quiet redis-server; then
        echo -e "Redis:         ${GREEN}[RUNNING]${NC}"
    else
        echo -e "Redis:         ${RED}[STOPPED]${NC}"
    fi
    
    # Bot
    if systemctl is-active --quiet $SERVICE_NAME; then
        echo -e "Expense Bot:   ${GREEN}[RUNNING]${NC}"
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º uptime
        UPTIME=$(systemctl show -p ActiveEnterTimestamp $SERVICE_NAME | cut -d'=' -f2)
        if [ ! -z "$UPTIME" ]; then
            echo -e "  Uptime:      ${BLUE}$UPTIME${NC}"
        fi
    else
        echo -e "Expense Bot:   ${RED}[STOPPED]${NC}"
    fi
    
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
start_bot() {
    echo -e "${YELLOW}–ó–∞–ø—É—Å–∫ Expense Bot...${NC}"
    sudo systemctl start $SERVICE_NAME
    sleep 2
    if systemctl is-active --quiet $SERVICE_NAME; then
        echo -e "${GREEN}‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!${NC}"
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞${NC}"
        echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: sudo journalctl -u $SERVICE_NAME -n 50"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞
stop_bot() {
    echo -e "${YELLOW}–û—Å—Ç–∞–Ω–æ–≤–∫–∞ Expense Bot...${NC}"
    sudo systemctl stop $SERVICE_NAME
    echo -e "${GREEN}‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
restart_bot() {
    echo -e "${YELLOW}–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Expense Bot...${NC}"
    sudo systemctl restart $SERVICE_NAME
    sleep 2
    if systemctl is-active --quiet $SERVICE_NAME; then
        echo -e "${GREEN}‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!${NC}"
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –ª–æ–≥–æ–≤
show_logs() {
    echo -e "${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ –ª–æ–≥–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:${NC}"
    echo "1) Bot logs (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 100 —Å—Ç—Ä–æ–∫)"
    echo "2) Bot logs (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏)"
    echo "3) PostgreSQL logs"
    echo "4) Redis logs"
    echo "5) Django error logs"
    
    read -p "–í—ã–±–æ—Ä (1-5): " choice
    
    case $choice in
        1) sudo journalctl -u $SERVICE_NAME -n 100 ;;
        2) sudo journalctl -u $SERVICE_NAME -f ;;
        3) sudo journalctl -u postgresql -n 50 ;;
        4) sudo journalctl -u redis-server -n 50 ;;
        5) tail -n 100 $PROJECT_DIR/logs/django_errors.log 2>/dev/null || echo "–§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω" ;;
        *) echo "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä" ;;
    esac
}

# –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–¥–∞
update_code() {
    echo -e "${YELLOW}–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –∏–∑ git...${NC}"
    
    cd "$PROJECT_DIR" || exit
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è
    if [ -f "./scripts/deploy.sh" ]; then
        chmod +x ./scripts/deploy.sh
        ./scripts/deploy.sh
    else
        echo -e "${RED}–°–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è –±–æ—Ç–∞
health_check() {
    echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã...${NC}"
    echo ""
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–º—è—Ç–∏
    echo -e "${BLUE}–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏:${NC}"
    free -h | grep -E "^Mem|^Swap"
    echo ""
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å–∫–∞
    echo -e "${BLUE}–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞:${NC}"
    df -h | grep -E "^/dev|^Filesystem"
    echo ""
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ Python
    echo -e "${BLUE}–ü—Ä–æ—Ü–µ—Å—Å—ã Python:${NC}"
    ps aux | grep python | grep -v grep | head -5
    echo ""
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∫ –ë–î
    echo -e "${BLUE}–ü–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL:${NC}"
    sudo -u postgres psql -c "SELECT count(*) as connections FROM pg_stat_activity WHERE datname = 'expense_bot';" 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é"
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞
create_backup() {
    echo -e "${YELLOW}–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –ë–î...${NC}"
    
    if [ -f "$PROJECT_DIR/scripts/backup_db.sh" ]; then
        cd "$PROJECT_DIR"
        ./scripts/backup_db.sh
    else
        echo -e "${RED}–°–∫—Ä–∏–ø—Ç –±—ç–∫–∞–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
    fi
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
clear
echo -e "${GREEN}======================================"
echo "    Expense Bot Management"
echo -e "======================================${NC}"
echo ""

PS3='–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: '
options=(
    "üìä –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å"
    "‚ñ∂Ô∏è  –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
    "‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞"
    "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
    "üìú –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
    "üîß –û–±–Ω–æ–≤–∏—Ç—å –∫–æ–¥ (–¥–µ–ø–ª–æ–π)"
    "üíæ –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø –ë–î"
    "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è"
    "‚ùå –í—ã—Ö–æ–¥"
)

while true; do
    select opt in "${options[@]}"
    do
        case $opt in
            "üìä –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å")
                show_status
                break
                ;;
            "‚ñ∂Ô∏è  –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞")
                start_bot
                show_status
                break
                ;;
            "‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞")
                stop_bot
                show_status
                break
                ;;
            "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞")
                restart_bot
                show_status
                break
                ;;
            "üìú –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏")
                show_logs
                break
                ;;
            "üîß –û–±–Ω–æ–≤–∏—Ç—å –∫–æ–¥ (–¥–µ–ø–ª–æ–π)")
                update_code
                break
                ;;
            "üíæ –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø –ë–î")
                create_backup
                break
                ;;
            "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è")
                health_check
                break
                ;;
            "‚ùå –í—ã—Ö–æ–¥")
                echo "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!"
                exit 0
                ;;
            *) echo "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä";;
        esac
    done
    
    echo ""
    echo "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    read
    clear
    echo -e "${GREEN}======================================"
    echo "    Expense Bot Management"
    echo -e "======================================${NC}"
    echo ""
done