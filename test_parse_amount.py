#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç: –ø–æ—á–µ–º—É –Ω–µ –ø–∞—Ä—Å–∏—Ç—Å—è —Å—É–º–º–∞ –≤ "–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Ä–æ–≥–∞ 750"
"""

import os
import sys
import django
import io
import re
from decimal import Decimal

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –¥–ª—è Windows
sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8')
sys.stderr = io.TextIOWrapper(sys.stderr.buffer, encoding='utf-8')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'expense_bot.settings')
django.setup()

from bot.utils.expense_parser import AMOUNT_PATTERNS

test_cases = [
    "–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Ä–æ–≥–∞ 750",
    "–ü–ª–∞—Ç–Ω–∞—è –¥–æ—Ä–æ–≥–∞ 750",
    "–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Ä–æ–≥–∞",
    "–ø–æ–¥–∞—Ä–∫–∏ 300",
    "–∫–æ—Ñ–µ 200",
]

print("=" * 80)
print("–¢–ï–°–¢ –ü–ê–†–°–ò–ù–ì–ê –°–£–ú–ú–´")
print("=" * 80)

for text in test_cases:
    print(f"\nüìù –¢–µ–∫—Å—Ç: '{text}'")
    print("-" * 40)
    
    # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –∫–∞–∫ –≤ –ø–∞—Ä—Å–µ—Ä–µ
    text_normalized = text.strip().lower()
    print(f"–ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–æ: '{text_normalized}'")
    
    amount_found = False
    for i, pattern in enumerate(AMOUNT_PATTERNS):
        match = re.search(pattern, text_normalized, re.IGNORECASE)
        if match:
            amount_str = match.group(1).replace(',', '.')
            try:
                amount = Decimal(amount_str)
                print(f"‚úÖ –ü–∞—Ç—Ç–µ—Ä–Ω #{i+1} –Ω–∞—à–µ–ª: {amount}")
                print(f"   –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ: '{match.group(0)}'")
                amount_found = True
                break
            except Exception as e:
                print(f"‚ùå –ü–∞—Ç—Ç–µ—Ä–Ω #{i+1} –Ω–∞—à–µ–ª '{match.group(0)}', –Ω–æ –æ—à–∏–±–∫–∞: {e}")
    
    if not amount_found:
        print("‚ùå –°—É–º–º–∞ –ù–ï –Ω–∞–π–¥–µ–Ω–∞!")
        print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã AMOUNT_PATTERNS")

print("\n" + "=" * 80)
print("–ü–ê–¢–¢–ï–†–ù–´ –î–õ–Ø –ü–û–ò–°–ö–ê –°–£–ú–ú–´:")
print("=" * 80)
for i, pattern in enumerate(AMOUNT_PATTERNS):
    print(f"{i+1}. {pattern}")