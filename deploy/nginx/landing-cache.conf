# Optimized Nginx configuration for landing page with caching
# www.coins-bot.ru

server {
    listen 80;
    server_name www.coins-bot.ru coins-bot.ru;

    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name www.coins-bot.ru coins-bot.ru;

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/www.coins-bot.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.coins-bot.ru/privkey.pem;

    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # Security Headers
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # GZIP Compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript
               application/json application/javascript application/xml+rss
               application/rss+xml font/truetype font/opentype
               application/vnd.ms-fontobject image/svg+xml;
    gzip_disable "msie6";

    # Brotli Compression (if module enabled)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css text/xml text/javascript
    #              application/json application/javascript application/xml+rss;

    # Root directory for landing page
    root /var/www/coins-bot;
    index index.html;

    # Logging
    access_log /var/log/nginx/coins-bot_access.log;
    error_log /var/log/nginx/coins-bot_error.log;

    # HTML files - short cache with revalidation
    location ~ \.html$ {
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        try_files $uri $uri/ =404;
    }

    # CSS and JS - long cache with versioning
    location ~ \.(css|js)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # Images - WebP with fallback
    location ~ \.(jpg|jpeg|png|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept;
        try_files $uri =404;
    }

    # WebP images - long cache
    location ~ \.webp$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept;
        try_files $uri =404;
    }

    # Video files - long cache
    location ~ \.(mp4|webm|ogg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Accept-Ranges bytes;
        try_files $uri =404;
    }

    # Fonts - long cache
    location ~ \.(woff|woff2|ttf|eot|otf)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin *;
        try_files $uri =404;
    }

    # Legal documents
    location ~ ^/(privacy|offer|privacy_en|offer_en)\.html$ {
        expires 7d;
        add_header Cache-Control "public, must-revalidate";
        try_files $uri =404;
    }

    # Main page
    location = / {
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        try_files /index.html =404;
    }

    # English version
    location = /en {
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        try_files /index_en.html =404;
    }

    # Block access to sensitive files
    location ~ /\. {
        deny all;
    }

    location ~ \.(env|git|gitignore|md)$ {
        deny all;
    }

    # Block access to demos archive
    location ~ /archive {
        deny all;
    }

    # 404 error page
    error_page 404 /404.html;
    location = /404.html {
        internal;
    }
}
