#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç: —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª—è–µ—Ç –¥–µ—Ñ–æ–ª—Ç–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
"""

import os
import sys
import django
import io

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –¥–ª—è Windows
sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8')
sys.stderr = io.TextIOWrapper(sys.stderr.buffer, encoding='utf-8')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'expense_bot.settings')
django.setup()

from bot.utils.expense_categorizer import categorize_expense, categorize_expense_with_weights
from expenses.models import Profile, ExpenseCategory, CategoryKeyword, CATEGORY_KEYWORDS

# –í–∞—à telegram ID
user_id = 881292737

def test_deleted_category():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    
    try:
        profile = Profile.objects.get(telegram_id=user_id)
    except Profile.DoesNotExist:
        print("–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    print("=" * 80)
    print("–¢–ï–°–¢: –£–î–ê–õ–ï–ù–ò–ï –î–ï–§–û–õ–¢–ù–û–ô –ö–ê–¢–ï–ì–û–†–ò–ò")
    print("=" * 80)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    print("\nüìÅ –¢–µ–∫—É—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    categories = ExpenseCategory.objects.filter(profile=profile)
    for cat in categories:
        print(f"  - {cat.name}")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –∫–∞—Ñ–µ
    test_words = ["–∫–æ—Ñ–µ", "–∫–∞–ø—É—á–∏–Ω–æ", "–ø–∏—Ü—Ü–∞", "—Ä–µ—Å—Ç–æ—Ä–∞–Ω"]
    
    print("\n" + "-" * 80)
    print("–¢–ï–°–¢ 1: –° —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π '–ö–∞—Ñ–µ –∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã'")
    print("-" * 80)
    
    for word in test_words:
        # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è (–ë–î)
        cat_db, conf_db, _ = categorize_expense_with_weights(word, profile)
        # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è
        cat_static, conf_static, _ = categorize_expense(word)
        
        print(f"\n'{word}':")
        print(f"  –ë–î ‚Üí {cat_db} ({conf_db:.0%})")
        print(f"  –°—Ç–∞—Ç–∏–∫–∞ ‚Üí {cat_static} ({conf_static:.0%})")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–ö–∞—Ñ–µ –∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã"
    print("\n" + "=" * 80)
    print("‚ö†Ô∏è –°–ò–ú–£–õ–Ø–¶–ò–Ø: –ß—Ç–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–∏—Ç '–ö–∞—Ñ–µ –∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã'?")
    print("=" * 80)
    
    # –ù–∞—Ö–æ–¥–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∫–∞—Ñ–µ
    cafe_category = None
    for cat in categories:
        if '–∫–∞—Ñ–µ' in cat.name.lower() or '—Ä–µ—Å—Ç–æ—Ä–∞–Ω' in cat.name.lower():
            cafe_category = cat
            break
    
    if cafe_category:
        print(f"\n–ù–∞–π–¥–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {cafe_category.name}")
        
        # –í—Ä–µ–º–µ–Ω–Ω–æ —Å–∫—Ä—ã–≤–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é (—Å–∏–º—É–ª–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ)
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        original_is_active = cafe_category.is_active
        cafe_category.is_active = False
        cafe_category.save()
        
        print("‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ (—Å–∏–º—É–ª—è—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è)")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—é –ë–ï–ó —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        print("\n" + "-" * 80)
        print("–¢–ï–°–¢ 2: –ë–ï–ó –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '–ö–∞—Ñ–µ –∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã' –≤ –ë–î –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        print("-" * 80)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        active_categories = ExpenseCategory.objects.filter(
            profile=profile, 
            is_active=True
        )
        
        print(f"\n–ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {active_categories.count()}")
        
        for word in test_words:
            print(f"\n'{word}':")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–ª–æ–≤–æ –≤ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤–∞—Ö
            found_in_static = False
            static_category = None
            for cat_name, keywords in CATEGORY_KEYWORDS.items():
                if any(word.lower() in kw.lower() for kw in keywords):
                    found_in_static = True
                    static_category = cat_name
                    break
            
            if found_in_static:
                print(f"  ‚úÖ –ï—Å—Ç—å –≤ CATEGORY_KEYWORDS['{static_category}']")
            else:
                print(f"  ‚ùå –ù–µ—Ç –≤ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤–∞—Ö")
            
            # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è (–¥–æ–ª–∂–Ω–∞ –æ—Ç–∫–∞—Ç–∏—Ç—å—Å—è –∫ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π)
            cat_db, conf_db, _ = categorize_expense_with_weights(word, profile)
            print(f"  –ë–î ‚Üí {cat_db} ({conf_db:.0%})")
            
            # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è (–≤—Å–µ–≥–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç)
            cat_static, conf_static, _ = categorize_expense(word)
            print(f"  –°—Ç–∞—Ç–∏–∫–∞ ‚Üí {cat_static} ({conf_static:.0%})")
            
            # –ê–Ω–∞–ª–∏–∑
            if cat_db == cat_static:
                print(f"  ‚Ü©Ô∏è –ë–î –æ—Ç–∫–∞—Ç–∏–ª–∞—Å—å –∫ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏")
            else:
                print(f"  ‚ö†Ô∏è –ë–î –∏ —Å—Ç–∞—Ç–∏–∫–∞ –¥–∞–ª–∏ —Ä–∞–∑–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã!")
        
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
        cafe_category.is_active = original_is_active
        cafe_category.save()
        print("\n‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    else:
        print("‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è '–ö–∞—Ñ–µ –∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    
    print("\n" + "=" * 80)
    print("–í–´–í–û–î–´:")
    print("=" * 80)
    print("""
1. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–∏—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ –ë–î:
   - –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ –ë–î —Ç–æ–∂–µ —É–¥–∞–ª—è—é—Ç—Å—è (CASCADE)
   - –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫–∞—Ç—ã–≤–∞–µ—Ç—Å—è –∫ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–º –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
   
2. –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –í–°–ï–ì–î–ê –¥–æ—Å—Ç—É–ø–Ω—ã –∫–∞–∫ –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
   
3. –ü—Ä–æ–±–ª–µ–º–∞: —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç "–∫–∞—Ñ–µ", –∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 
   –º–æ–∂–µ—Ç –Ω–µ –±—ã—Ç—å —Ç–∞–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (—É –Ω–µ–≥–æ "üçΩÔ∏è –ö–∞—Ñ–µ –∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã")
   
4. –†–µ—à–µ–Ω–∏–µ: —Ñ—É–Ω–∫—Ü–∏—è get_or_create_category() —Å–æ–∑–¥–∞—Å—Ç "–ü—Ä–æ—á–∏–µ —Ä–∞—Å—Ö–æ–¥—ã"
   –µ—Å–ª–∏ —Ç–æ—á–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
    """)

if __name__ == "__main__":
    test_deleted_category()