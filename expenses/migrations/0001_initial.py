# Generated by Django 4.2.11 on 2025-08-02 09:16

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('period_type', models.CharField(choices=[('monthly', '–ú–µ—Å—è—á–Ω—ã–π'), ('weekly', '–ù–µ–¥–µ–ª—å–Ω—ã–π'), ('daily', '–î–Ω–µ–≤–Ω–æ–π')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '–ë—é–¥–∂–µ—Ç',
                'verbose_name_plural': '–ë—é–¥–∂–µ—Ç—ã',
                'db_table': 'expenses_budget',
            },
        ),
        migrations.CreateModel(
            name='Cashback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=100, verbose_name='–ù–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞')),
                ('cashback_percent', models.DecimalField(decimal_places=2, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(99)], verbose_name='–ü—Ä–æ—Ü–µ–Ω—Ç –∫–µ—à–±—ç–∫–∞')),
                ('month', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)], verbose_name='–ú–µ—Å—è—Ü')),
                ('limit_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='–õ–∏–º–∏—Ç')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '–ö–µ—à–±—ç–∫',
                'verbose_name_plural': '–ö–µ—à–±—ç–∫–∏',
                'db_table': 'expenses_cashback',
            },
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('description', models.TextField(blank=True)),
                ('expense_date', models.DateField(default=datetime.date.today)),
                ('expense_time', models.TimeField(default=datetime.datetime.now)),
                ('receipt_photo', models.CharField(blank=True, max_length=255)),
                ('ai_categorized', models.BooleanField(default=False)),
                ('ai_confidence', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '–†–∞—Å—Ö–æ–¥',
                'verbose_name_plural': '–†–∞—Å—Ö–æ–¥—ã',
                'db_table': 'expenses_expense',
                'ordering': ['-expense_date', '-expense_time'],
            },
        ),
        migrations.CreateModel(
            name='ExpenseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('icon', models.CharField(default='üí∞', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '–ö–∞—Ç–µ–≥–æ—Ä–∏—è',
                'verbose_name_plural': '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏',
                'db_table': 'expenses_category',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_id', models.BigIntegerField(db_index=True, unique=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('language_code', models.CharField(choices=[('ru', '–†—É—Å—Å–∫–∏–π'), ('en', 'English')], default='ru', max_length=2)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('currency', models.CharField(default='RUB', max_length=3)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '–ü—Ä–æ—Ñ–∏–ª—å',
                'verbose_name_plural': '–ü—Ä–æ—Ñ–∏–ª–∏',
                'db_table': 'users_profile',
            },
        ),
        migrations.CreateModel(
            name='UserSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('daily_reminder_enabled', models.BooleanField(default=True)),
                ('daily_reminder_time', models.TimeField(default='20:00')),
                ('weekly_summary_enabled', models.BooleanField(default=True)),
                ('monthly_summary_enabled', models.BooleanField(default=True)),
                ('budget_alerts_enabled', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='expenses.profile')),
            ],
            options={
                'verbose_name': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
                'verbose_name_plural': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
                'db_table': 'users_settings',
            },
        ),
        migrations.AddIndex(
            model_name='profile',
            index=models.Index(fields=['telegram_id'], name='users_profi_telegra_2ee79a_idx'),
        ),
        migrations.AddField(
            model_name='expensecategory',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='expenses.profile'),
        ),
        migrations.AddField(
            model_name='expense',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='expenses', to='expenses.expensecategory'),
        ),
        migrations.AddField(
            model_name='expense',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='expenses.profile'),
        ),
        migrations.AddField(
            model_name='cashback',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='expenses.expensecategory'),
        ),
        migrations.AddField(
            model_name='cashback',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cashbacks', to='expenses.profile'),
        ),
        migrations.AddField(
            model_name='budget',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='expenses.expensecategory'),
        ),
        migrations.AddField(
            model_name='budget',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='budgets', to='expenses.profile'),
        ),
        migrations.AddIndex(
            model_name='expensecategory',
            index=models.Index(fields=['profile', 'name'], name='expenses_ca_profile_e5a7d4_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='expensecategory',
            unique_together={('profile', 'name')},
        ),
        migrations.AddIndex(
            model_name='expense',
            index=models.Index(fields=['profile', '-expense_date'], name='expenses_ex_profile_78528e_idx'),
        ),
        migrations.AddIndex(
            model_name='expense',
            index=models.Index(fields=['profile', 'category', '-expense_date'], name='expenses_ex_profile_232576_idx'),
        ),
        migrations.AddIndex(
            model_name='cashback',
            index=models.Index(fields=['profile', 'month'], name='expenses_ca_profile_8316a1_idx'),
        ),
        migrations.AddIndex(
            model_name='cashback',
            index=models.Index(fields=['profile', 'category'], name='expenses_ca_profile_95d04f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='cashback',
            unique_together={('profile', 'category', 'bank_name', 'month')},
        ),
    ]
