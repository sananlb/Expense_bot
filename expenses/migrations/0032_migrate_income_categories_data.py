# Generated by Django

from django.db import migrations
import re


def detect_language(text):
    """Определяет язык текста по символам"""
    if not text:
        return 'ru'
    
    # Убираем эмодзи и пробелы для анализа
    clean_text = re.sub(r'[\U0001F000-\U0001F9FF\s]+', '', text)
    
    # Проверяем наличие кириллицы
    if re.search(r'[а-яА-ЯёЁ]', clean_text):
        return 'ru'
    # Проверяем наличие латиницы
    elif re.search(r'[a-zA-Z]', clean_text):
        return 'en'
    else:
        return 'ru'  # По умолчанию русский


def migrate_income_categories_data(apps, schema_editor):
    """Мигрирует существующие данные категорий доходов в новые поля"""
    IncomeCategory = apps.get_model('expenses', 'IncomeCategory')
    
    # Словарь переводов стандартных категорий
    translations = {
        # Русский -> Английский
        'Зарплата': 'Salary',
        'Фриланс': 'Freelance',
        'Инвестиции': 'Investments',
        'Подарки': 'Gifts',
        'Кэшбек': 'Cashback',
        'Возврат': 'Refund',
        'Продажа': 'Sale',
        'Прочие доходы': 'Other Income',
        # Английский -> Русский (обратные)
        'Salary': 'Зарплата',
        'Freelance': 'Фриланс',
        'Investments': 'Инвестиции',
        'Gifts': 'Подарки',
        'Cashback': 'Кэшбек',
        'Refund': 'Возврат',
        'Sale': 'Продажа',
        'Other Income': 'Прочие доходы',
    }
    
    for category in IncomeCategory.objects.all():
        # Извлекаем текст без эмодзи
        name_without_icon = category.name
        if category.icon:
            name_without_icon = category.name.replace(category.icon, '').strip()
        
        # Определяем язык
        detected_lang = detect_language(name_without_icon)
        
        # Заполняем поля в зависимости от языка
        if detected_lang == 'ru':
            category.name_ru = name_without_icon
            category.original_language = 'ru'
            
            # Если есть перевод, добавляем английскую версию
            if name_without_icon in translations:
                category.name_en = translations[name_without_icon]
                category.is_translatable = True
            else:
                category.is_translatable = False
                
        elif detected_lang == 'en':
            category.name_en = name_without_icon
            category.original_language = 'en'
            
            # Если есть перевод, добавляем русскую версию
            if name_without_icon in translations:
                category.name_ru = translations[name_without_icon]
                category.is_translatable = True
            else:
                category.is_translatable = False
        
        category.save()


def reverse_migration(apps, schema_editor):
    """Откат миграции"""
    IncomeCategory = apps.get_model('expenses', 'IncomeCategory')
    
    for category in IncomeCategory.objects.all():
        # Очищаем новые поля
        category.name_ru = None
        category.name_en = None
        category.original_language = 'ru'
        category.is_translatable = True
        category.save()


class Migration(migrations.Migration):

    dependencies = [
        ('expenses', '0031_add_multilingual_income_categories'),
    ]

    operations = [
        migrations.RunPython(migrate_income_categories_data, reverse_migration),
    ]