version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: expense_bot_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME:-expense_bot}
      - POSTGRES_USER=${DB_USER:-expense_user}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-expense_password}
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-expense_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: expense_bot_redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: expense_bot_app
    env_file:
      - .env
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DJANGO_SETTINGS_MODULE=expense_bot.settings
    volumes:
      - ./logs:/app/logs
      - ./media:/app/media
      - static_volume:/app/staticfiles
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: python run_bot.py

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: expense_bot_celery
    env_file:
      - .env
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DJANGO_SETTINGS_MODULE=expense_bot.settings
    volumes:
      - ./logs:/app/logs
      - ./media:/app/media
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: celery -A expense_bot worker --loglevel=info

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: expense_bot_celery_beat
    env_file:
      - .env
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DJANGO_SETTINGS_MODULE=expense_bot.settings
    volumes:
      - ./logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: celery -A expense_bot beat --loglevel=info

  # Optional: Django admin panel
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: expense_bot_web
    env_file:
      - .env
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DJANGO_SETTINGS_MODULE=expense_bot.settings
    volumes:
      - ./logs:/app/logs
      - ./media:/app/media
      - static_volume:/app/staticfiles
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: gunicorn expense_bot.wsgi:application --bind 0.0.0.0:8000 --workers 2
    ports:
      - "8000:8000"

volumes:
  postgres_data:
  static_volume: