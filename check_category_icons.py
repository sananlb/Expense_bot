"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —ç–º–æ–¥–∑–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö —Ç—Ä–∞—Ç
"""
import os
import sys
import django
import locale

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º UTF-8 –∫–æ–¥–∏—Ä–æ–≤–∫—É –¥–ª—è Windows
if sys.platform == "win32":
    import io
    sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8')
    sys.stderr = io.TextIOWrapper(sys.stderr.buffer, encoding='utf-8')

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'expense_bot.settings')
django.setup()

from expenses.models import ExpenseCategory, Profile

# –°–ª–æ–≤–∞—Ä—å –¥–µ—Ñ–æ–ª—Ç–Ω—ã—Ö —ç–º–æ–¥–∑–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
DEFAULT_ICONS = {
    # –†—É—Å—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è
    '–ø—Ä–æ–¥—É–∫—Ç—ã': 'üõí',
    '—Å—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç—ã': 'üõí',
    '—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç': 'üöá',
    '–∫–∞—Ñ–µ': '‚òï',
    '–∫–∞—Ñ–µ –∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã': 'üçΩÔ∏è',
    '—Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã': 'üçΩÔ∏è',
    '–∑–¥–æ—Ä–æ–≤—å–µ': 'üíä',
    '–∞–ø—Ç–µ–∫–∞': 'üíä',
    '–æ–¥–µ–∂–¥–∞': 'üëï',
    '–æ–¥–µ–∂–¥–∞ –∏ –æ–±—É–≤—å': 'üëî',
    '—Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è': 'üéÆ',
    '–¥–æ–º': 'üè†',
    '–¥–æ–º –∏ –∂–∫—Ö': 'üè†',
    '–∂–∫—Ö': 'üè†',
    '—Å–≤—è–∑—å': 'üì±',
    '—Å–≤—è–∑—å –∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç': 'üì±',
    '–∏–Ω—Ç–µ—Ä–Ω–µ—Ç': 'üåê',
    '–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ': 'üìö',
    '–∞–≤—Ç–æ–º–æ–±–∏–ª—å': 'üöó',
    '–∞–∑—Å': '‚õΩ',
    '–∑–∞–ø—Ä–∞–≤–∫–∞': '‚õΩ',
    '—Ç–æ–ø–ª–∏–≤–æ': '‚õΩ',
    '–ø–æ–¥–∞—Ä–∫–∏': 'üéÅ',
    '–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è': '‚úàÔ∏è',
    '—Å–ø–æ—Ä—Ç': '‚öΩ',
    '–∫—Ä–∞—Å–æ—Ç–∞': 'üíÑ',
    '—Ç–∞–∫—Å–∏': 'üöï',
    '–¥—Ä—É–≥–æ–µ': 'üì¶',
    '–ø—Ä–æ—á–∏–µ —Ä–∞—Å—Ö–æ–¥—ã': 'üì¶',
    '–ø—Ä–æ—á–µ–µ': 'üì¶',
    
    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è
    'groceries': 'üõí',
    'supermarkets': 'üõí',
    'transport': 'üöá',
    'cafe': '‚òï',
    'cafes and restaurants': 'üçΩÔ∏è',
    'restaurants': 'üçΩÔ∏è',
    'health': 'üíä',
    'pharmacy': 'üíä',
    'clothes': 'üëï',
    'clothes and shoes': 'üëî',
    'entertainment': 'üéÆ',
    'home': 'üè†',
    'home and utilities': 'üè†',
    'utilities': 'üè†',
    'communication': 'üì±',
    'communication and internet': 'üì±',
    'internet': 'üåê',
    'education': 'üìö',
    'car': 'üöó',
    'gas station': '‚õΩ',
    'fuel': '‚õΩ',
    'gifts': 'üéÅ',
    'travel': '‚úàÔ∏è',
    'sports': '‚öΩ',
    'beauty': 'üíÑ',
    'taxi': 'üöï',
    'other': 'üì¶',
    'other expenses': 'üì¶',
}

def check_and_fix_icons():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç —ç–º–æ–¥–∑–∏ —É –∫–∞—Ç–µ–≥–æ—Ä–∏–π"""
    
    print("=" * 60)
    print("–ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–º–æ–¥–∑–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö —Ç—Ä–∞—Ç")
    print("=" * 60)
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    categories = ExpenseCategory.objects.all().select_related('profile')
    
    categories_without_icon = []
    categories_with_icon = []
    fixed_categories = []
    
    for cat in categories:
        if not cat.icon or cat.icon.strip() == '':
            categories_without_icon.append(cat)
            
            # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —ç–º–æ–¥–∑–∏
            possible_icon = None
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä—É—Å—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
            if cat.name_ru:
                name_lower = cat.name_ru.lower().strip()
                if name_lower in DEFAULT_ICONS:
                    possible_icon = DEFAULT_ICONS[name_lower]
            
            # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –ø—Ä–æ–≤–µ—Ä—è–µ–º –∞–Ω–≥–ª–∏–π—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
            if not possible_icon and cat.name_en:
                name_lower = cat.name_en.lower().strip()
                if name_lower in DEFAULT_ICONS:
                    possible_icon = DEFAULT_ICONS[name_lower]
            
            # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ, –∏—â–µ–º —á–∞—Å—Ç–∏—á–Ω–æ–µ
            if not possible_icon:
                for key, icon in DEFAULT_ICONS.items():
                    if cat.name_ru and key in cat.name_ru.lower():
                        possible_icon = icon
                        break
                    elif cat.name_en and key in cat.name_en.lower():
                        possible_icon = icon
                        break
            
            # –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —ç–º–æ–¥–∑–∏ - –æ–±–Ω–æ–≤–ª—è–µ–º
            if possible_icon:
                cat.icon = possible_icon
                cat.save()
                fixed_categories.append((cat, possible_icon))
                print(f"‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è '{cat.name_ru or cat.name_en}' (user {cat.profile.telegram_id}): –¥–æ–±–∞–≤–ª–µ–Ω —ç–º–æ–¥–∑–∏ {possible_icon}")
            else:
                print(f"‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è –±–µ–∑ —ç–º–æ–¥–∑–∏: '{cat.name_ru or cat.name_en}' (user {cat.profile.telegram_id})")
        else:
            categories_with_icon.append(cat)
    
    print("\n" + "=" * 60)
    print(f"–í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {categories.count()}")
    print(f"–° —ç–º–æ–¥–∑–∏: {len(categories_with_icon)}")
    print(f"–ë–µ–∑ —ç–º–æ–¥–∑–∏: {len(categories_without_icon)}")
    print(f"–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: {len(fixed_categories)}")
    
    if categories_without_icon and not fixed_categories:
        print("\n‚ö†Ô∏è –û—Å—Ç–∞–ª–∏—Å—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –±–µ–∑ —ç–º–æ–¥–∑–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã —ç–º–æ–¥–∑–∏
    print("\n" + "=" * 60)
    print("–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ —ç–º–æ–¥–∑–∏ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º:")
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    users_categories = {}
    for cat in categories:
        user_id = cat.profile.telegram_id
        if user_id not in users_categories:
            users_categories[user_id] = []
        users_categories[user_id].append(cat)
    
    for user_id, user_cats in users_categories.items():
        icon_counts = {}
        for cat in user_cats:
            if cat.icon:
                if cat.icon not in icon_counts:
                    icon_counts[cat.icon] = []
                icon_counts[cat.icon].append(cat.name_ru or cat.name_en)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
        duplicates = {icon: names for icon, names in icon_counts.items() if len(names) > 1}
        if duplicates:
            print(f"\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id}:")
            for icon, names in duplicates.items():
                print(f"  {icon} –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è: {', '.join(names)}")

if __name__ == "__main__":
    check_and_fix_icons()