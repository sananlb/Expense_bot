#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç: –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è AI
"""

import os
import sys
import django
import io

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –¥–ª—è Windows
sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8')
sys.stderr = io.TextIOWrapper(sys.stderr.buffer, encoding='utf-8')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'expense_bot.settings')
django.setup()

from bot.utils.expense_parser import parse_expense_message
from expenses.models import Profile
from asgiref.sync import sync_to_async
import logging

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='[%(levelname)s] %(message)s')

# –í–∞—à telegram ID
user_id = 881292737

async def test_ai_fixed():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –ª–æ–≥–∏–∫—É AI"""
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
    @sync_to_async
    def get_profile():
        try:
            return Profile.objects.get(telegram_id=user_id)
        except Profile.DoesNotExist:
            return Profile.objects.create(telegram_id=user_id)
    
    profile = await get_profile()
    
    print("=" * 80)
    print("–¢–ï–°–¢: –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê AI")
    print("=" * 80)
    
    test_cases = [
        ("–∫–æ—Ñ–µ 200", "–ï—Å—Ç—å –≤ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤–∞—Ö ‚Üí AI –Ω–µ –Ω—É–∂–µ–Ω"),
        ("–∞–±—Ä–∞–∫–∞–¥–∞–±—Ä–∞ 500", "–ù–ï–¢ –≤ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤–∞—Ö ‚Üí –¥–æ–ª–∂–µ–Ω –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è AI"),
        ("—Å—Ç—Ä–∞–Ω–Ω–∞—è –ø–æ–∫—É–ø–∫–∞ 300", "–ù–ï–¢ –≤ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤–∞—Ö ‚Üí –¥–æ–ª–∂–µ–Ω –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è AI"),
        ("–ø–∏—Ü—Ü–∞ 400", "–ï—Å—Ç—å –≤ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤–∞—Ö ‚Üí AI –Ω–µ –Ω—É–∂–µ–Ω"),
    ]
    
    for text, scenario in test_cases:
        print(f"\n{'='*60}")
        print(f"üìù –¢–µ—Å—Ç: '{text}'")
        print(f"–°—Ü–µ–Ω–∞—Ä–∏–π: {scenario}")
        print("-" * 60)
        
        # –¢–µ—Å—Ç –ë–ï–ó AI
        print("\n1Ô∏è‚É£ –ë–ï–ó AI (use_ai=False):")
        parsed_no_ai = await parse_expense_message(text, user_id=user_id, profile=profile, use_ai=False)
        if parsed_no_ai:
            print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {parsed_no_ai['category']}")
            print(f"   –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {parsed_no_ai.get('confidence', 0):.0%}")
        
        # –¢–µ—Å—Ç –° AI
        print("\n2Ô∏è‚É£ –° AI (use_ai=True):")
        parsed_with_ai = await parse_expense_message(text, user_id=user_id, profile=profile, use_ai=True)
        if parsed_with_ai:
            print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {parsed_with_ai['category']}")
            print(f"   –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {parsed_with_ai.get('confidence', 0):.0%}")
            
            if parsed_with_ai.get('ai_enhanced'):
                print(f"   ‚ú® AI –ò–°–ü–û–õ–¨–ó–û–í–ê–õ–°–Ø! (–ø—Ä–æ–≤–∞–π–¥–µ—Ä: {parsed_with_ai.get('ai_provider', 'unknown')})")
                print(f"   ‚úÖ AI —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ —Å–ª–æ–≤–∞!")
            else:
                if "–∞–±—Ä–∞–∫–∞–¥–∞–±—Ä–∞" in text or "—Å—Ç—Ä–∞–Ω–Ω–∞—è" in text:
                    print(f"   ‚ö†Ô∏è AI –ù–ï –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è (—Ö–æ—Ç—è –¥–æ–ª–∂–µ–Ω –±—ã–ª)")
                else:
                    print(f"   ‚úÖ AI –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è (–ø—Ä–∞–≤–∏–ª—å–Ω–æ, —Å–ª–æ–≤–æ –Ω–∞–π–¥–µ–Ω–æ –≤ –∫–ª—é—á–µ–≤—ã—Ö)")
    
    print("\n" + "=" * 80)
    print("–†–ï–ó–£–õ–¨–¢–ê–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:")
    print("=" * 80)
    print("""
–¢–µ–ø–µ—Ä—å AI –¥–æ–ª–∂–µ–Ω –ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö:

‚úÖ AI –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫–æ–≥–¥–∞:
   - –°–ª–æ–≤–æ –ù–ï –Ω–∞–π–¥–µ–Ω–æ –≤ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤–∞—Ö (–ë–î –∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö)
   - –ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–∞–π–¥–µ–Ω–∞, –Ω–æ –µ—ë –Ω–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

‚úÖ AI –ù–ï –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫–æ–≥–¥–∞:
   - –°–ª–æ–≤–æ –Ω–∞–π–¥–µ–Ω–æ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –µ—Å—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   
–¶–µ–ø–æ—á–∫–∞ —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ:
1. CategoryKeyword (–ë–î) ‚Üí 2. CATEGORY_KEYWORDS (–∫–æ–¥) ‚Üí 3. AI ‚Üí 4. "–ü—Ä–æ—á–∏–µ —Ä–∞—Å—Ö–æ–¥—ã"
    """)

if __name__ == "__main__":
    import asyncio
    asyncio.run(test_ai_fixed())