#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ —Å 100% —Å–∫–∏–¥–∫–æ–π
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
import django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'expense_bot.settings')
django.setup()

from decimal import Decimal
from expenses.models import PromoCode

def test_promocode_discounts():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã —Å–∫–∏–¥–æ–∫"""

    print("=" * 60)
    print("–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –ü–†–û–ú–û–ö–û–î–û–í")
    print("=" * 60)

    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã
    test_cases = [
        # (—Ç–∏–ø, –∑–Ω–∞—á–µ–Ω–∏–µ, –±–∞–∑–æ–≤–∞—è_—Ü–µ–Ω–∞, –æ–∂–∏–¥–∞–µ–º—ã–π_—Ä–µ–∑—É–ª—å—Ç–∞—Ç, –æ–ø–∏—Å–∞–Ω–∏–µ)
        ('percent', Decimal('100'), 100, 0, "100% —Å–∫–∏–¥–∫–∞ ‚Üí –±–µ—Å–ø–ª–∞—Ç–Ω–æ"),
        ('percent', Decimal('50'), 100, 50, "50% —Å–∫–∏–¥–∫–∞"),
        ('percent', Decimal('99'), 100, 1, "99% —Å–∫–∏–¥–∫–∞"),
        ('percent', Decimal('150'), 100, 0, "150% —Å–∫–∏–¥–∫–∞ (–∑–∞—â–∏—Ç–∞ –æ—Ç overflow)"),
        ('percent', Decimal('-10'), 100, 100, "–û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è —Å–∫–∏–¥–∫–∞ (–∑–∞—â–∏—Ç–∞)"),

        ('fixed', Decimal('100'), 100, 0, "–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∫–∏–¥–∫–∞ = —Ü–µ–Ω–µ"),
        ('fixed', Decimal('50'), 100, 50, "–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∫–∏–¥–∫–∞ < —Ü–µ–Ω—ã"),
        ('fixed', Decimal('200'), 100, 0, "–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∫–∏–¥–∫–∞ > —Ü–µ–Ω—ã"),
        ('fixed', Decimal('-50'), 100, 100, "–û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è (–∑–∞—â–∏—Ç–∞)"),

        ('days', Decimal('30'), 100, 100, "–ü—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ –¥–Ω–∏ (—Ü–µ–Ω–∞ –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è)"),
    ]

    for discount_type, discount_value, base_price, expected, description in test_cases:
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥
        promo = PromoCode(
            code=f"TEST_{discount_type}_{discount_value}",
            discount_type=discount_type,
            discount_value=discount_value,
            is_active=True
        )

        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–∫–∏–¥–∫—É
        result = promo.apply_discount(base_price)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        status = "‚úÖ" if result == expected else "‚ùå"
        print(f"\n{status} {description}")
        print(f"   –¢–∏–ø: {discount_type}, –ó–Ω–∞—á–µ–Ω–∏–µ: {discount_value}")
        print(f"   –ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞: {base_price} –∑–≤—ë–∑–¥")
        print(f"   –ü–æ—Å–ª–µ —Å–∫–∏–¥–∫–∏: {result} –∑–≤—ë–∑–¥")
        print(f"   –û–∂–∏–¥–∞–ª–æ—Å—å: {expected} –∑–≤—ë–∑–¥")

        if result != expected:
            print(f"   ‚ö†Ô∏è  –û–®–ò–ë–ö–ê: –†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–Ω–∏—é!")

    print("\n" + "=" * 60)
    print("–ü–†–û–í–ï–†–ö–ê –õ–û–ì–ò–ö–ò –û–ë–†–ê–ë–û–¢–ö–ò –í –ë–û–¢–ï")
    print("=" * 60)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É –¥–ª—è –±–æ—Ç–∞
    subscription_prices = {
        'month': 100,  # 100 –∑–≤—ë–∑–¥ –∑–∞ –º–µ—Å—è—Ü
        'six_months': 500  # 500 –∑–≤—ë–∑–¥ –∑–∞ 6 –º–µ—Å—è—Ü–µ–≤
    }

    promo_100 = PromoCode(
        code="FREE100",
        discount_type='percent',
        discount_value=100,
        is_active=True
    )

    promo_99 = PromoCode(
        code="ALMOST_FREE",
        discount_type='percent',
        discount_value=99,
        is_active=True
    )

    print("\nüìç –ü—Ä–æ–º–æ–∫–æ–¥ 100% —Å–∫–∏–¥–∫–∏ (FREE100):")
    for sub_type, price in subscription_prices.items():
        discounted = promo_100.apply_discount(price)
        print(f"   {sub_type}: {price} ‚Üí {discounted} –∑–≤—ë–∑–¥")
        if discounted == 0:
            print(f"   ‚úÖ –ë—É–¥–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –ë–ï–ó –∏–Ω–≤–æ–π—Å–∞")
        else:
            final_price = max(1, int(discounted))
            print(f"   üí≥ –°–æ–∑–¥–∞–µ—Ç—Å—è –∏–Ω–≤–æ–π—Å –Ω–∞ {final_price} –∑–≤—ë–∑–¥")

    print("\nüìç –ü—Ä–æ–º–æ–∫–æ–¥ 99% —Å–∫–∏–¥–∫–∏ (ALMOST_FREE):")
    for sub_type, price in subscription_prices.items():
        discounted = promo_99.apply_discount(price)
        print(f"   {sub_type}: {price} ‚Üí {discounted} –∑–≤—ë–∑–¥")
        if discounted == 0:
            print(f"   ‚úÖ –ë—É–¥–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –ë–ï–ó –∏–Ω–≤–æ–π—Å–∞")
        else:
            final_price = max(1, int(discounted))
            print(f"   üí≥ –°–æ–∑–¥–∞–µ—Ç—Å—è –∏–Ω–≤–æ–π—Å –Ω–∞ {final_price} –∑–≤—ë–∑–¥ (–º–∏–Ω–∏–º—É–º 1)")

    print("\n" + "=" * 60)
    print("–ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print("=" * 60)
    print("‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥—ã —Å 100% —Å–∫–∏–¥–∫–æ–π –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    print("‚úÖ –ó–∞—â–∏—Ç–∞ –æ—Ç –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("‚úÖ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –∏–Ω–≤–æ–π—Å–∞ = 1 –∑–≤–µ–∑–¥–∞")
    print("‚úÖ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏ –∞–∫—Ç–∏–≤–∏—Ä—É—é—Ç—Å—è –±–µ–∑ –ø–ª–∞—Ç–µ–∂–∞")
    print("=" * 60)

if __name__ == "__main__":
    test_promocode_discounts()