#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö —ç–º–æ–¥–∑–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö –¥–æ—Ö–æ–¥–æ–≤

–ü—Ä–æ–±–ª–µ–º–∞: –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Ö–æ–¥–æ–≤ –¥–ª—è —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–æ–∑–¥–∞–≤–∞–ª–∏—Å—å –±–µ–∑ —ç–º–æ–¥–∑–∏
–≤ –ø–æ–ª–µ name –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ create_default_income_categories.

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –Ω–∞—Ö–æ–¥–∏—Ç —Ç–∞–∫–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç —ç–º–æ–¥–∑–∏ –∫ –∏—Ö –Ω–∞–∑–≤–∞–Ω–∏—è–º.
"""

import os
import sys
import django
from django.db import transaction

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'expense_bot.settings')
django.setup()

from expenses.models import IncomeCategory, Profile, DEFAULT_INCOME_CATEGORIES
import re
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)


def has_emoji_at_start(text):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç —Å —ç–º–æ–¥–∑–∏"""
    if not text:
        return False

    emoji_pattern = r'^[\U0001F000-\U0001F9FF\U00002600-\U000027BF\U0001F300-\U0001F64F\U0001F680-\U0001F6FF]'
    return bool(re.match(emoji_pattern, text))


def fix_income_categories_emojis():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —ç–º–æ–¥–∑–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö –¥–æ—Ö–æ–¥–æ–≤"""

    # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏–π –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å —ç–º–æ–¥–∑–∏
    default_categories_dict = dict(DEFAULT_INCOME_CATEGORIES)

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∞–∑–≤–∞–Ω–∏–π
    category_emoji_map = {
        '–∑–∞—Ä–ø–ª–∞—Ç–∞': 'üíº',
        '–ø—Ä–µ–º–∏–∏ –∏ –±–æ–Ω—É—Å—ã': 'üéÅ',
        '—Ñ—Ä–∏–ª–∞–Ω—Å': 'üíª',
        '–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏': 'üìà',
        '–ø—Ä–æ—Ü–µ–Ω—Ç—ã –ø–æ –≤–∫–ª–∞–¥–∞–º': 'üè¶',
        '–∞—Ä–µ–Ω–¥–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏': 'üè†',
        '–≤–æ–∑–≤—Ä–∞—Ç—ã –∏ –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏–∏': 'üí∏',
        '–∫–µ—à–±—ç–∫': 'üí≥',
        '–ø–æ–¥–∞—Ä–∫–∏': 'üéâ',
        '–ø—Ä–æ—á–∏–µ –¥–æ—Ö–æ–¥—ã': 'üí∞',
        # –ê–Ω–≥–ª–∏–π—Å–∫–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
        'salary': 'üíº',
        'bonuses': 'üéÅ',
        'freelance': 'üíª',
        'investments': 'üìà',
        'bank interest': 'üè¶',
        'rent income': 'üè†',
        'refunds': 'üí∏',
        'cashback': 'üí≥',
        'gifts': 'üéâ',
        'other income': 'üí∞',
    }

    fixed_count = 0
    total_checked = 0

    with transaction.atomic():
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Ö–æ–¥–æ–≤
        categories = IncomeCategory.objects.select_related('profile').all()

        for category in categories:
            total_checked += 1

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —ç–º–æ–¥–∑–∏ –≤ –Ω–∞—á–∞–ª–µ –Ω–∞–∑–≤–∞–Ω–∏—è
            if not has_emoji_at_start(category.name):
                logger.info(f"–ù–∞–π–¥–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –±–µ–∑ —ç–º–æ–¥–∑–∏: '{category.name}' (user: {category.profile.telegram_id})")

                # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —ç–º–æ–¥–∑–∏
                category_name_lower = category.name.lower().strip()

                # –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
                emoji = None
                if category_name_lower in category_emoji_map:
                    emoji = category_emoji_map[category_name_lower]
                else:
                    # –ò—â–µ–º —á–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
                    for name, emj in category_emoji_map.items():
                        if name in category_name_lower or category_name_lower in name:
                            emoji = emj
                            break

                # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º —ç–º–æ–¥–∑–∏ –∏–∑ –ø–æ–ª—è icon
                if not emoji and category.icon:
                    emoji = category.icon

                # –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ –Ω–µ—Ç —ç–º–æ–¥–∑–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π
                if not emoji:
                    emoji = 'üí∞'

                # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                new_name = f"{emoji} {category.name}"

                logger.info(f"–û–±–Ω–æ–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é: '{category.name}' -> '{new_name}'")

                category.name = new_name
                category.save()

                fixed_count += 1

    logger.info(f"–ó–∞–≤–µ—Ä—à–µ–Ω–æ. –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ: {total_checked}, –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: {fixed_count}")
    return fixed_count


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    logger.info("–ù–∞—á–∏–Ω–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —ç–º–æ–¥–∑–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö –¥–æ—Ö–æ–¥–æ–≤...")

    try:
        fixed_count = fix_income_categories_emojis()

        if fixed_count > 0:
            logger.info(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ {fixed_count} –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–æ—Ö–æ–¥–æ–≤")
        else:
            logger.info("‚úÖ –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Ö–æ–¥–æ–≤ —É–∂–µ –∏–º–µ—é—Ç —ç–º–æ–¥–∑–∏")

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {e}")
        return 1

    return 0


if __name__ == '__main__':
    sys.exit(main())